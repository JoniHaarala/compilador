
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSING BOOLEAN COMMA COMMENT DECIMAL DIV DOUBLEDOT ENTERO FLOAT IDENT IGUAL INTEGER LBRACE LBRACKET LOGICO LPAREN MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL NOT PIN PINTYPE PROD PUNTO RBRACE RBRACKET RESTA RPAREN SEMICOLON SINGLEDOT SPACE STRING SUM VAR_ASSING and backward begin end foward function left library or procedure right stop tk_else tk_if tk_while var waitbeginend : begin codigo endcodigo : sentencia\n              | sentencia codigosentencia : libreria sentencia\n                 | variable sentencia\n                 | control sentencia\n                 | definicion sentencia\n                 | procedimiento sentencia\n                 | pin sentencia\n                 | funcion sentencia\n                 | loop sentencia\n                 | emptyvar_tipo : INTEGER\n                | STRING\n                | FLOAT\n                | BOOLEANdefinicion : var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLONtipo : ENTERO\n            | DECIMAL\n            | LOGICOvariable : IDENT ASSING ENTERO SEMICOLON variable\n                | IDENT ASSING ENTERO SEMICOLONcontrol : if\n               | ifelse\n               | whileif : tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLONifelse : tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE elseelse : tk_else LBRACE codigo RBRACE SEMICOLONwhile : tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLONfuncion : function var_tipo LPAREN argumento RPAREN SEMICOLONprocedimiento : procedure IDENT LPAREN argumento RPAREN SEMICOLONpin : PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLONargumento : argumento\n                | LPAREN IDENT VAR_ASSING var_tipo RPAREN\n                | emptylibreria : library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON\n                | emptyloop : adelante\n            | atras\n            | izquierda\n            | derecha\n            | esperar\n            | parar\n            | emptyadelante : foward LPAREN RPAREN SEMICOLONatras : backward LPAREN RPAREN SEMICOLONizquierda : left LPAREN RPAREN SEMICOLONderecha : right LPAREN RPAREN SEMICOLONesperar : wait LPAREN ENTERO RPAREN SEMICOLONparar : stop LPAREN RPAREN SEMICOLONexpression : expression SUM term\n                  | expression RESTA term\n                  | term\n                  | tipo\n                  | variable\n       term       : term PROD factor\n                  | term DIV factor\n                  | factorfactor : ENTERO\n              | LPAREN expression RPARENcondicion : expression relacion expression\n                 | NOT expression\n                 | expression logico expressionrelacion : IGUAL\n                | MAYOR\n                | MENOR\n                | MAYOR_IGUAL\n                | MENOR_IGUALlogico : and\n              | orempty :'
    
_lr_action_items = {'begin':([0,],[2,]),'$end':([1,37,],[0,-1,]),'library':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[14,14,14,14,14,14,14,14,14,14,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,14,14,-49,-31,-30,-17,-32,-26,-27,-29,-36,14,-28,]),'IDENT':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,20,23,24,25,26,27,28,39,40,41,42,43,44,45,46,49,51,57,58,65,71,74,90,92,99,100,103,104,105,106,107,108,109,114,115,116,117,119,120,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[15,15,15,15,15,15,15,15,15,15,-12,-23,-24,-25,50,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,67,69,15,15,89,15,15,15,123,15,15,-64,-65,-66,-67,-68,-69,-70,-45,-46,-47,-48,-50,138,-21,15,15,-49,-31,-30,-17,-32,-26,-27,-29,-36,15,-28,]),'var':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[19,19,19,19,19,19,19,19,19,19,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,19,19,-49,-31,-30,-17,-32,-26,-27,-29,-36,19,-28,]),'procedure':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[20,20,20,20,20,20,20,20,20,20,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,20,20,-49,-31,-30,-17,-32,-26,-27,-29,-36,20,-28,]),'PIN':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[21,21,21,21,21,21,21,21,21,21,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,21,21,-49,-31,-30,-17,-32,-26,-27,-29,-36,21,-28,]),'function':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[22,22,22,22,22,22,22,22,22,22,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,22,22,-49,-31,-30,-17,-32,-26,-27,-29,-36,22,-28,]),'tk_if':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[29,29,29,29,29,29,29,29,29,29,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,29,29,-49,-31,-30,-17,-32,-26,-27,-29,-36,29,-28,]),'tk_while':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[30,30,30,30,30,30,30,30,30,30,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,30,30,-49,-31,-30,-17,-32,-26,-27,-29,-36,30,-28,]),'foward':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[31,31,31,31,31,31,31,31,31,31,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,31,31,-49,-31,-30,-17,-32,-26,-27,-29,-36,31,-28,]),'backward':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[32,32,32,32,32,32,32,32,32,32,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,32,32,-49,-31,-30,-17,-32,-26,-27,-29,-36,32,-28,]),'left':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[33,33,33,33,33,33,33,33,33,33,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,33,33,-49,-31,-30,-17,-32,-26,-27,-29,-36,33,-28,]),'right':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[34,34,34,34,34,34,34,34,34,34,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,34,34,-49,-31,-30,-17,-32,-26,-27,-29,-36,34,-28,]),'wait':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[35,35,35,35,35,35,35,35,35,35,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,35,35,-49,-31,-30,-17,-32,-26,-27,-29,-36,35,-28,]),'stop':([2,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,147,149,154,155,157,158,159,162,],[36,36,36,36,36,36,36,36,36,36,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,36,36,-49,-31,-30,-17,-32,-26,-27,-29,-36,36,-28,]),'end':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,38,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,137,141,143,147,149,154,155,157,158,162,],[-71,37,-2,-71,-71,-71,-71,-71,-71,-71,-71,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,-49,-31,-30,-17,-32,-26,-27,-29,-36,-28,]),'RBRACE':([4,5,6,7,8,9,10,11,12,13,16,17,18,23,24,25,26,27,28,38,39,40,41,42,43,44,45,46,90,114,115,116,117,119,121,128,136,137,141,143,144,145,147,149,154,155,157,158,159,160,162,],[-2,-71,-71,-71,-71,-71,-71,-71,-71,-12,-23,-24,-25,-38,-39,-40,-41,-42,-43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-22,-45,-46,-47,-48,-50,-21,-71,-71,-49,-31,-30,150,151,-17,-32,-26,-27,-29,-36,-71,161,-28,]),'LPAREN':([14,19,21,29,30,31,32,33,34,35,36,50,52,53,54,55,56,57,58,68,70,71,74,99,100,101,102,103,104,105,106,107,108,109,111,112,],[47,49,51,57,58,59,60,61,62,63,64,68,70,-13,-14,-15,-16,71,71,92,92,71,71,71,71,71,71,-64,-65,-66,-67,-68,-69,-70,71,71,]),'ASSING':([15,],[48,]),'INTEGER':([22,91,140,],[53,122,53,]),'STRING':([22,140,],[54,54,]),'FLOAT':([22,140,],[55,55,]),'BOOLEAN':([22,140,],[56,56,]),'SINGLEDOT':([47,138,],[65,146,]),'ENTERO':([48,57,58,63,71,74,99,100,101,102,103,104,105,106,107,108,109,111,112,],[66,79,79,87,79,79,79,79,132,132,-64,-65,-66,-67,-68,-69,-70,132,132,]),'RPAREN':([53,54,55,56,59,60,61,62,64,68,70,72,75,76,77,78,79,80,81,82,87,90,93,94,96,97,110,121,122,125,127,129,130,131,132,133,134,135,146,148,153,],[-13,-14,-15,-16,83,84,85,86,88,-71,-71,98,-53,-54,-55,-58,-18,-19,-20,113,118,-22,124,-35,126,127,-62,-21,139,142,-60,-61,-63,-51,-59,-52,-56,-57,152,153,-34,]),'NOT':([57,58,],[74,74,]),'DECIMAL':([57,58,71,74,99,100,103,104,105,106,107,108,109,],[80,80,80,80,80,80,-64,-65,-66,-67,-68,-69,-70,]),'LOGICO':([57,58,71,74,99,100,103,104,105,106,107,108,109,],[81,81,81,81,81,81,-64,-65,-66,-67,-68,-69,-70,]),'SEMICOLON':([66,83,84,85,86,88,118,124,126,139,142,150,151,152,161,],[90,114,115,116,117,119,137,141,143,147,149,154,157,158,162,]),'VAR_ASSING':([67,69,123,],[91,95,140,]),'SUM':([73,75,76,77,78,79,80,81,90,97,110,121,127,129,130,131,132,133,134,135,],[101,-53,-54,-55,-58,-18,-19,-20,-22,101,101,-21,-60,101,101,-51,-59,-52,-56,-57,]),'RESTA':([73,75,76,77,78,79,80,81,90,97,110,121,127,129,130,131,132,133,134,135,],[102,-53,-54,-55,-58,-18,-19,-20,-22,102,102,-21,-60,102,102,-51,-59,-52,-56,-57,]),'IGUAL':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[103,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'MAYOR':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[104,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'MENOR':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[105,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'MAYOR_IGUAL':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[106,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'MENOR_IGUAL':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[107,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'and':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[108,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'or':([73,75,76,77,78,79,80,81,90,121,127,131,132,133,134,135,],[109,-53,-54,-55,-58,-18,-19,-20,-22,-21,-60,-51,-59,-52,-56,-57,]),'PROD':([75,78,79,127,131,132,133,134,135,],[111,-58,-59,-60,111,-59,111,-56,-57,]),'DIV':([75,78,79,127,131,132,133,134,135,],[112,-58,-59,-60,112,-59,112,-56,-57,]),'PUNTO':([89,],[120,]),'PINTYPE':([95,],[125,]),'LBRACE':([98,113,156,],[128,136,159,]),'tk_else':([150,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'beginend':([0,],[1,]),'codigo':([2,4,128,136,159,],[3,38,144,145,160,]),'sentencia':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[4,4,39,40,41,42,43,44,45,46,4,4,4,]),'libreria':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'variable':([2,4,5,6,7,8,9,10,11,12,57,58,71,74,90,99,100,128,136,159,],[6,6,6,6,6,6,6,6,6,6,77,77,77,77,121,77,77,6,6,6,]),'control':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'definicion':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'procedimiento':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'pin':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funcion':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'loop':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'empty':([2,4,5,6,7,8,9,10,11,12,68,70,128,136,159,],[13,13,13,13,13,13,13,13,13,13,94,94,13,13,13,]),'if':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'ifelse':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'while':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'adelante':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'atras':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'izquierda':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'derecha':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'esperar':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'parar':([2,4,5,6,7,8,9,10,11,12,128,136,159,],[28,28,28,28,28,28,28,28,28,28,28,28,28,]),'var_tipo':([22,140,],[52,148,]),'condicion':([57,58,],[72,82,]),'expression':([57,58,71,74,99,100,],[73,73,97,110,129,130,]),'term':([57,58,71,74,99,100,101,102,],[75,75,75,75,75,75,131,133,]),'tipo':([57,58,71,74,99,100,],[76,76,76,76,76,76,]),'factor':([57,58,71,74,99,100,101,102,111,112,],[78,78,78,78,78,78,78,78,134,135,]),'argumento':([68,70,],[93,96,]),'relacion':([73,],[99,]),'logico':([73,],[100,]),'else':([150,],[155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> beginend","S'",1,None,None,None),
  ('beginend -> begin codigo end','beginend',3,'p_body','sintactico.py',11),
  ('codigo -> sentencia','codigo',1,'p_codigo','sintactico.py',16),
  ('codigo -> sentencia codigo','codigo',2,'p_codigo','sintactico.py',17),
  ('sentencia -> libreria sentencia','sentencia',2,'p_sentencia','sintactico.py',22),
  ('sentencia -> variable sentencia','sentencia',2,'p_sentencia','sintactico.py',23),
  ('sentencia -> control sentencia','sentencia',2,'p_sentencia','sintactico.py',24),
  ('sentencia -> definicion sentencia','sentencia',2,'p_sentencia','sintactico.py',25),
  ('sentencia -> procedimiento sentencia','sentencia',2,'p_sentencia','sintactico.py',26),
  ('sentencia -> pin sentencia','sentencia',2,'p_sentencia','sintactico.py',27),
  ('sentencia -> funcion sentencia','sentencia',2,'p_sentencia','sintactico.py',28),
  ('sentencia -> loop sentencia','sentencia',2,'p_sentencia','sintactico.py',29),
  ('sentencia -> empty','sentencia',1,'p_sentencia','sintactico.py',30),
  ('var_tipo -> INTEGER','var_tipo',1,'p_var_tipo','sintactico.py',34),
  ('var_tipo -> STRING','var_tipo',1,'p_var_tipo','sintactico.py',35),
  ('var_tipo -> FLOAT','var_tipo',1,'p_var_tipo','sintactico.py',36),
  ('var_tipo -> BOOLEAN','var_tipo',1,'p_var_tipo','sintactico.py',37),
  ('definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON','definicion',7,'p_definicion','sintactico.py',42),
  ('tipo -> ENTERO','tipo',1,'p_tipo','sintactico.py',48),
  ('tipo -> DECIMAL','tipo',1,'p_tipo','sintactico.py',49),
  ('tipo -> LOGICO','tipo',1,'p_tipo','sintactico.py',50),
  ('variable -> IDENT ASSING ENTERO SEMICOLON variable','variable',5,'p_variable','sintactico.py',55),
  ('variable -> IDENT ASSING ENTERO SEMICOLON','variable',4,'p_variable','sintactico.py',56),
  ('control -> if','control',1,'p_control','sintactico.py',62),
  ('control -> ifelse','control',1,'p_control','sintactico.py',63),
  ('control -> while','control',1,'p_control','sintactico.py',64),
  ('if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON','if',8,'p_if','sintactico.py',69),
  ('ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else','ifelse',8,'p_ifelse','sintactico.py',74),
  ('else -> tk_else LBRACE codigo RBRACE SEMICOLON','else',5,'p_else','sintactico.py',79),
  ('while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON','while',8,'p_while','sintactico.py',84),
  ('funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON','funcion',6,'p_funcion','sintactico.py',90),
  ('procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON','procedimiento',6,'p_procedimiento','sintactico.py',95),
  ('pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON','pin',7,'p_pin','sintactico.py',99),
  ('argumento -> argumento','argumento',1,'p_argumento','sintactico.py',107),
  ('argumento -> LPAREN IDENT VAR_ASSING var_tipo RPAREN','argumento',5,'p_argumento','sintactico.py',108),
  ('argumento -> empty','argumento',1,'p_argumento','sintactico.py',109),
  ('libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON','libreria',9,'p_libreria','sintactico.py',115),
  ('libreria -> empty','libreria',1,'p_libreria','sintactico.py',116),
  ('loop -> adelante','loop',1,'p_loop','sintactico.py',122),
  ('loop -> atras','loop',1,'p_loop','sintactico.py',123),
  ('loop -> izquierda','loop',1,'p_loop','sintactico.py',124),
  ('loop -> derecha','loop',1,'p_loop','sintactico.py',125),
  ('loop -> esperar','loop',1,'p_loop','sintactico.py',126),
  ('loop -> parar','loop',1,'p_loop','sintactico.py',127),
  ('loop -> empty','loop',1,'p_loop','sintactico.py',128),
  ('adelante -> foward LPAREN RPAREN SEMICOLON','adelante',4,'p_adelante','sintactico.py',133),
  ('atras -> backward LPAREN RPAREN SEMICOLON','atras',4,'p_atras','sintactico.py',142),
  ('izquierda -> left LPAREN RPAREN SEMICOLON','izquierda',4,'p_izquierda','sintactico.py',151),
  ('derecha -> right LPAREN RPAREN SEMICOLON','derecha',4,'p_derecha','sintactico.py',160),
  ('esperar -> wait LPAREN ENTERO RPAREN SEMICOLON','esperar',5,'p_esperar','sintactico.py',169),
  ('parar -> stop LPAREN RPAREN SEMICOLON','parar',4,'p_parar','sintactico.py',178),
  ('expression -> expression SUM term','expression',3,'p_expression_op','sintactico.py',188),
  ('expression -> expression RESTA term','expression',3,'p_expression_op','sintactico.py',189),
  ('expression -> term','expression',1,'p_expression_op','sintactico.py',190),
  ('expression -> tipo','expression',1,'p_expression_op','sintactico.py',191),
  ('expression -> variable','expression',1,'p_expression_op','sintactico.py',192),
  ('term -> term PROD factor','term',3,'p_expression_op','sintactico.py',193),
  ('term -> term DIV factor','term',3,'p_expression_op','sintactico.py',194),
  ('term -> factor','term',1,'p_expression_op','sintactico.py',195),
  ('factor -> ENTERO','factor',1,'p_factor','sintactico.py',200),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','sintactico.py',201),
  ('condicion -> expression relacion expression','condicion',3,'p_condicion','sintactico.py',206),
  ('condicion -> NOT expression','condicion',2,'p_condicion','sintactico.py',207),
  ('condicion -> expression logico expression','condicion',3,'p_condicion','sintactico.py',208),
  ('relacion -> IGUAL','relacion',1,'p_relacion','sintactico.py',213),
  ('relacion -> MAYOR','relacion',1,'p_relacion','sintactico.py',214),
  ('relacion -> MENOR','relacion',1,'p_relacion','sintactico.py',215),
  ('relacion -> MAYOR_IGUAL','relacion',1,'p_relacion','sintactico.py',216),
  ('relacion -> MENOR_IGUAL','relacion',1,'p_relacion','sintactico.py',217),
  ('logico -> and','logico',1,'p_logico','sintactico.py',222),
  ('logico -> or','logico',1,'p_logico','sintactico.py',223),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',228),
]
