Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    COMMENT
    DOUBLEDOT
    LBRACKET
    RBRACKET
    SPACE

Grammar

Rule 0     S' -> beginend
Rule 1     beginend -> begin codigo end
Rule 2     codigo -> sentencia
Rule 3     codigo -> sentencia codigo
Rule 4     sentencia -> libreria sentencia
Rule 5     sentencia -> variable sentencia
Rule 6     sentencia -> control sentencia
Rule 7     sentencia -> definicion sentencia
Rule 8     sentencia -> procedimiento sentencia
Rule 9     sentencia -> pin sentencia
Rule 10    sentencia -> funcion sentencia
Rule 11    sentencia -> loop sentencia
Rule 12    sentencia -> empty
Rule 13    var_tipo -> INTEGER
Rule 14    var_tipo -> STRING
Rule 15    var_tipo -> FLOAT
Rule 16    var_tipo -> BOOLEAN
Rule 17    definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
Rule 18    tipo -> ENTERO
Rule 19    tipo -> DECIMAL
Rule 20    tipo -> LOGICO
Rule 21    variable -> IDENT ASSING ENTERO SEMICOLON variable
Rule 22    variable -> IDENT ASSING ENTERO SEMICOLON
Rule 23    control -> if
Rule 24    control -> ifelse
Rule 25    control -> while
Rule 26    if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
Rule 27    ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
Rule 28    else -> tk_else LBRACE codigo RBRACE SEMICOLON
Rule 29    while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
Rule 30    funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON
Rule 31    procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON
Rule 32    pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
Rule 33    argumento -> argumento
Rule 34    argumento -> LPAREN IDENT VAR_ASSING var_tipo RPAREN
Rule 35    argumento -> empty
Rule 36    libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
Rule 37    libreria -> empty
Rule 38    loop -> adelante
Rule 39    loop -> atras
Rule 40    loop -> izquierda
Rule 41    loop -> derecha
Rule 42    loop -> esperar
Rule 43    loop -> parar
Rule 44    loop -> empty
Rule 45    adelante -> foward LPAREN RPAREN SEMICOLON
Rule 46    atras -> backward LPAREN RPAREN SEMICOLON
Rule 47    izquierda -> left LPAREN RPAREN SEMICOLON
Rule 48    derecha -> right LPAREN RPAREN SEMICOLON
Rule 49    esperar -> wait LPAREN ENTERO RPAREN SEMICOLON
Rule 50    parar -> stop LPAREN RPAREN SEMICOLON
Rule 51    expression -> expression SUM term
Rule 52    expression -> expression RESTA term
Rule 53    expression -> term
Rule 54    expression -> tipo
Rule 55    expression -> variable
Rule 56    term -> term PROD factor
Rule 57    term -> term DIV factor
Rule 58    term -> factor
Rule 59    factor -> ENTERO
Rule 60    factor -> LPAREN expression RPAREN
Rule 61    condicion -> expression relacion expression
Rule 62    condicion -> NOT expression
Rule 63    condicion -> expression logico expression
Rule 64    relacion -> IGUAL
Rule 65    relacion -> MAYOR
Rule 66    relacion -> MENOR
Rule 67    relacion -> MAYOR_IGUAL
Rule 68    relacion -> MENOR_IGUAL
Rule 69    logico -> and
Rule 70    logico -> or
Rule 71    empty -> <empty>

Terminals, with rules where they appear

ASSING               : 21 22
BOOLEAN              : 16
COMMA                : 
COMMENT              : 
DECIMAL              : 19
DIV                  : 57
DOUBLEDOT            : 
ENTERO               : 18 21 22 49 59
FLOAT                : 15
IDENT                : 17 21 22 31 32 34 36 36
IGUAL                : 64
INTEGER              : 13 17
LBRACE               : 26 27 28 29
LBRACKET             : 
LOGICO               : 20
LPAREN               : 17 26 27 29 30 31 32 34 36 45 46 47 48 49 50 60
MAYOR                : 65
MAYOR_IGUAL          : 67
MENOR                : 66
MENOR_IGUAL          : 68
NOT                  : 62
PIN                  : 32
PINTYPE              : 32
PROD                 : 56
PUNTO                : 36
RBRACE               : 26 27 28 29
RBRACKET             : 
RESTA                : 52
RPAREN               : 17 26 27 29 30 31 32 34 36 45 46 47 48 49 50 60
SEMICOLON            : 17 21 22 26 28 29 30 31 32 36 45 46 47 48 49 50
SINGLEDOT            : 36 36
SPACE                : 
STRING               : 14
SUM                  : 51
VAR_ASSING           : 17 32 34
and                  : 69
backward             : 46
begin                : 1
end                  : 1
error                : 
foward               : 45
function             : 30
left                 : 47
library              : 36
or                   : 70
procedure            : 31
right                : 48
stop                 : 50
tk_else              : 28
tk_if                : 26 27
tk_while             : 29
var                  : 17
wait                 : 49

Nonterminals, with rules where they appear

adelante             : 38
argumento            : 30 31 33
atras                : 39
beginend             : 0
codigo               : 1 3 26 27 28 29
condicion            : 26 27 29
control              : 6
definicion           : 7
derecha              : 41
else                 : 27
empty                : 12 35 37 44
esperar              : 42
expression           : 51 52 60 61 61 62 63 63
factor               : 56 57 58
funcion              : 10
if                   : 23
ifelse               : 24
izquierda            : 40
libreria             : 4
logico               : 63
loop                 : 11
parar                : 43
pin                  : 9
procedimiento        : 8
relacion             : 61
sentencia            : 2 3 4 5 6 7 8 9 10 11
term                 : 51 52 53 56 57
tipo                 : 54
var_tipo             : 30 34
variable             : 5 21 55
while                : 25

Parsing method: LALR

state 0

    (0) S' -> . beginend
    (1) beginend -> . begin codigo end

    begin           shift and go to state 2

    beginend                       shift and go to state 1

state 1

    (0) S' -> beginend .



state 2

    (1) beginend -> begin . codigo end
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    codigo                         shift and go to state 3
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 3

    (1) beginend -> begin codigo . end

    end             shift and go to state 37


state 4

    (2) codigo -> sentencia .
    (3) codigo -> sentencia . codigo
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! reduce/reduce conflict for end resolved using rule 2 (codigo -> sentencia .)
  ! reduce/reduce conflict for RBRACE resolved using rule 2 (codigo -> sentencia .)
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    end             reduce using rule 2 (codigo -> sentencia .)
    RBRACE          reduce using rule 2 (codigo -> sentencia .)
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]
  ! end             [ reduce using rule 71 (empty -> .) ]
  ! RBRACE          [ reduce using rule 71 (empty -> .) ]

    sentencia                      shift and go to state 4
    codigo                         shift and go to state 38
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 5

    (4) sentencia -> libreria . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    libreria                       shift and go to state 5
    sentencia                      shift and go to state 39
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 6

    (5) sentencia -> variable . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    variable                       shift and go to state 6
    sentencia                      shift and go to state 40
    libreria                       shift and go to state 5
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 7

    (6) sentencia -> control . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    control                        shift and go to state 7
    sentencia                      shift and go to state 41
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 8

    (7) sentencia -> definicion . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    definicion                     shift and go to state 8
    sentencia                      shift and go to state 42
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 9

    (8) sentencia -> procedimiento . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    procedimiento                  shift and go to state 9
    sentencia                      shift and go to state 43
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 10

    (9) sentencia -> pin . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    pin                            shift and go to state 10
    sentencia                      shift and go to state 44
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 11

    (10) sentencia -> funcion . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    funcion                        shift and go to state 11
    sentencia                      shift and go to state 45
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 12

    (11) sentencia -> loop . sentencia
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    end             reduce using rule 71 (empty -> .)
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    loop                           shift and go to state 12
    sentencia                      shift and go to state 46
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 13

    (12) sentencia -> empty .
    (37) libreria -> empty .
    (44) loop -> empty .

  ! reduce/reduce conflict for library resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for var resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for procedure resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for PIN resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for function resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for tk_if resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for tk_while resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for foward resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for backward resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for left resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for right resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for wait resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for stop resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for end resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for library resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for var resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for procedure resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for PIN resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for function resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for tk_if resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for tk_while resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for foward resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for backward resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for left resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for right resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for wait resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for stop resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for end resolved using rule 12 (sentencia -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 12 (sentencia -> empty .)
    library         reduce using rule 12 (sentencia -> empty .)
    IDENT           reduce using rule 12 (sentencia -> empty .)
    var             reduce using rule 12 (sentencia -> empty .)
    procedure       reduce using rule 12 (sentencia -> empty .)
    PIN             reduce using rule 12 (sentencia -> empty .)
    function        reduce using rule 12 (sentencia -> empty .)
    tk_if           reduce using rule 12 (sentencia -> empty .)
    tk_while        reduce using rule 12 (sentencia -> empty .)
    foward          reduce using rule 12 (sentencia -> empty .)
    backward        reduce using rule 12 (sentencia -> empty .)
    left            reduce using rule 12 (sentencia -> empty .)
    right           reduce using rule 12 (sentencia -> empty .)
    wait            reduce using rule 12 (sentencia -> empty .)
    stop            reduce using rule 12 (sentencia -> empty .)
    end             reduce using rule 12 (sentencia -> empty .)
    RBRACE          reduce using rule 12 (sentencia -> empty .)

  ! library         [ reduce using rule 37 (libreria -> empty .) ]
  ! IDENT           [ reduce using rule 37 (libreria -> empty .) ]
  ! var             [ reduce using rule 37 (libreria -> empty .) ]
  ! procedure       [ reduce using rule 37 (libreria -> empty .) ]
  ! PIN             [ reduce using rule 37 (libreria -> empty .) ]
  ! function        [ reduce using rule 37 (libreria -> empty .) ]
  ! tk_if           [ reduce using rule 37 (libreria -> empty .) ]
  ! tk_while        [ reduce using rule 37 (libreria -> empty .) ]
  ! foward          [ reduce using rule 37 (libreria -> empty .) ]
  ! backward        [ reduce using rule 37 (libreria -> empty .) ]
  ! left            [ reduce using rule 37 (libreria -> empty .) ]
  ! right           [ reduce using rule 37 (libreria -> empty .) ]
  ! wait            [ reduce using rule 37 (libreria -> empty .) ]
  ! stop            [ reduce using rule 37 (libreria -> empty .) ]
  ! end             [ reduce using rule 37 (libreria -> empty .) ]
  ! RBRACE          [ reduce using rule 37 (libreria -> empty .) ]
  ! library         [ reduce using rule 44 (loop -> empty .) ]
  ! IDENT           [ reduce using rule 44 (loop -> empty .) ]
  ! var             [ reduce using rule 44 (loop -> empty .) ]
  ! procedure       [ reduce using rule 44 (loop -> empty .) ]
  ! PIN             [ reduce using rule 44 (loop -> empty .) ]
  ! function        [ reduce using rule 44 (loop -> empty .) ]
  ! tk_if           [ reduce using rule 44 (loop -> empty .) ]
  ! tk_while        [ reduce using rule 44 (loop -> empty .) ]
  ! foward          [ reduce using rule 44 (loop -> empty .) ]
  ! backward        [ reduce using rule 44 (loop -> empty .) ]
  ! left            [ reduce using rule 44 (loop -> empty .) ]
  ! right           [ reduce using rule 44 (loop -> empty .) ]
  ! wait            [ reduce using rule 44 (loop -> empty .) ]
  ! stop            [ reduce using rule 44 (loop -> empty .) ]
  ! end             [ reduce using rule 44 (loop -> empty .) ]
  ! RBRACE          [ reduce using rule 44 (loop -> empty .) ]


state 14

    (36) libreria -> library . LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON

    LPAREN          shift and go to state 47


state 15

    (21) variable -> IDENT . ASSING ENTERO SEMICOLON variable
    (22) variable -> IDENT . ASSING ENTERO SEMICOLON

    ASSING          shift and go to state 48


state 16

    (23) control -> if .

    library         reduce using rule 23 (control -> if .)
    IDENT           reduce using rule 23 (control -> if .)
    var             reduce using rule 23 (control -> if .)
    procedure       reduce using rule 23 (control -> if .)
    PIN             reduce using rule 23 (control -> if .)
    function        reduce using rule 23 (control -> if .)
    tk_if           reduce using rule 23 (control -> if .)
    tk_while        reduce using rule 23 (control -> if .)
    foward          reduce using rule 23 (control -> if .)
    backward        reduce using rule 23 (control -> if .)
    left            reduce using rule 23 (control -> if .)
    right           reduce using rule 23 (control -> if .)
    wait            reduce using rule 23 (control -> if .)
    stop            reduce using rule 23 (control -> if .)
    end             reduce using rule 23 (control -> if .)
    RBRACE          reduce using rule 23 (control -> if .)


state 17

    (24) control -> ifelse .

    library         reduce using rule 24 (control -> ifelse .)
    IDENT           reduce using rule 24 (control -> ifelse .)
    var             reduce using rule 24 (control -> ifelse .)
    procedure       reduce using rule 24 (control -> ifelse .)
    PIN             reduce using rule 24 (control -> ifelse .)
    function        reduce using rule 24 (control -> ifelse .)
    tk_if           reduce using rule 24 (control -> ifelse .)
    tk_while        reduce using rule 24 (control -> ifelse .)
    foward          reduce using rule 24 (control -> ifelse .)
    backward        reduce using rule 24 (control -> ifelse .)
    left            reduce using rule 24 (control -> ifelse .)
    right           reduce using rule 24 (control -> ifelse .)
    wait            reduce using rule 24 (control -> ifelse .)
    stop            reduce using rule 24 (control -> ifelse .)
    end             reduce using rule 24 (control -> ifelse .)
    RBRACE          reduce using rule 24 (control -> ifelse .)


state 18

    (25) control -> while .

    library         reduce using rule 25 (control -> while .)
    IDENT           reduce using rule 25 (control -> while .)
    var             reduce using rule 25 (control -> while .)
    procedure       reduce using rule 25 (control -> while .)
    PIN             reduce using rule 25 (control -> while .)
    function        reduce using rule 25 (control -> while .)
    tk_if           reduce using rule 25 (control -> while .)
    tk_while        reduce using rule 25 (control -> while .)
    foward          reduce using rule 25 (control -> while .)
    backward        reduce using rule 25 (control -> while .)
    left            reduce using rule 25 (control -> while .)
    right           reduce using rule 25 (control -> while .)
    wait            reduce using rule 25 (control -> while .)
    stop            reduce using rule 25 (control -> while .)
    end             reduce using rule 25 (control -> while .)
    RBRACE          reduce using rule 25 (control -> while .)


state 19

    (17) definicion -> var . LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON

    LPAREN          shift and go to state 49


state 20

    (31) procedimiento -> procedure . IDENT LPAREN argumento RPAREN SEMICOLON

    IDENT           shift and go to state 50


state 21

    (32) pin -> PIN . LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON

    LPAREN          shift and go to state 51


state 22

    (30) funcion -> function . var_tipo LPAREN argumento RPAREN SEMICOLON
    (13) var_tipo -> . INTEGER
    (14) var_tipo -> . STRING
    (15) var_tipo -> . FLOAT
    (16) var_tipo -> . BOOLEAN

    INTEGER         shift and go to state 53
    STRING          shift and go to state 54
    FLOAT           shift and go to state 55
    BOOLEAN         shift and go to state 56

    var_tipo                       shift and go to state 52

state 23

    (38) loop -> adelante .

    library         reduce using rule 38 (loop -> adelante .)
    IDENT           reduce using rule 38 (loop -> adelante .)
    var             reduce using rule 38 (loop -> adelante .)
    procedure       reduce using rule 38 (loop -> adelante .)
    PIN             reduce using rule 38 (loop -> adelante .)
    function        reduce using rule 38 (loop -> adelante .)
    tk_if           reduce using rule 38 (loop -> adelante .)
    tk_while        reduce using rule 38 (loop -> adelante .)
    foward          reduce using rule 38 (loop -> adelante .)
    backward        reduce using rule 38 (loop -> adelante .)
    left            reduce using rule 38 (loop -> adelante .)
    right           reduce using rule 38 (loop -> adelante .)
    wait            reduce using rule 38 (loop -> adelante .)
    stop            reduce using rule 38 (loop -> adelante .)
    end             reduce using rule 38 (loop -> adelante .)
    RBRACE          reduce using rule 38 (loop -> adelante .)


state 24

    (39) loop -> atras .

    library         reduce using rule 39 (loop -> atras .)
    IDENT           reduce using rule 39 (loop -> atras .)
    var             reduce using rule 39 (loop -> atras .)
    procedure       reduce using rule 39 (loop -> atras .)
    PIN             reduce using rule 39 (loop -> atras .)
    function        reduce using rule 39 (loop -> atras .)
    tk_if           reduce using rule 39 (loop -> atras .)
    tk_while        reduce using rule 39 (loop -> atras .)
    foward          reduce using rule 39 (loop -> atras .)
    backward        reduce using rule 39 (loop -> atras .)
    left            reduce using rule 39 (loop -> atras .)
    right           reduce using rule 39 (loop -> atras .)
    wait            reduce using rule 39 (loop -> atras .)
    stop            reduce using rule 39 (loop -> atras .)
    end             reduce using rule 39 (loop -> atras .)
    RBRACE          reduce using rule 39 (loop -> atras .)


state 25

    (40) loop -> izquierda .

    library         reduce using rule 40 (loop -> izquierda .)
    IDENT           reduce using rule 40 (loop -> izquierda .)
    var             reduce using rule 40 (loop -> izquierda .)
    procedure       reduce using rule 40 (loop -> izquierda .)
    PIN             reduce using rule 40 (loop -> izquierda .)
    function        reduce using rule 40 (loop -> izquierda .)
    tk_if           reduce using rule 40 (loop -> izquierda .)
    tk_while        reduce using rule 40 (loop -> izquierda .)
    foward          reduce using rule 40 (loop -> izquierda .)
    backward        reduce using rule 40 (loop -> izquierda .)
    left            reduce using rule 40 (loop -> izquierda .)
    right           reduce using rule 40 (loop -> izquierda .)
    wait            reduce using rule 40 (loop -> izquierda .)
    stop            reduce using rule 40 (loop -> izquierda .)
    end             reduce using rule 40 (loop -> izquierda .)
    RBRACE          reduce using rule 40 (loop -> izquierda .)


state 26

    (41) loop -> derecha .

    library         reduce using rule 41 (loop -> derecha .)
    IDENT           reduce using rule 41 (loop -> derecha .)
    var             reduce using rule 41 (loop -> derecha .)
    procedure       reduce using rule 41 (loop -> derecha .)
    PIN             reduce using rule 41 (loop -> derecha .)
    function        reduce using rule 41 (loop -> derecha .)
    tk_if           reduce using rule 41 (loop -> derecha .)
    tk_while        reduce using rule 41 (loop -> derecha .)
    foward          reduce using rule 41 (loop -> derecha .)
    backward        reduce using rule 41 (loop -> derecha .)
    left            reduce using rule 41 (loop -> derecha .)
    right           reduce using rule 41 (loop -> derecha .)
    wait            reduce using rule 41 (loop -> derecha .)
    stop            reduce using rule 41 (loop -> derecha .)
    end             reduce using rule 41 (loop -> derecha .)
    RBRACE          reduce using rule 41 (loop -> derecha .)


state 27

    (42) loop -> esperar .

    library         reduce using rule 42 (loop -> esperar .)
    IDENT           reduce using rule 42 (loop -> esperar .)
    var             reduce using rule 42 (loop -> esperar .)
    procedure       reduce using rule 42 (loop -> esperar .)
    PIN             reduce using rule 42 (loop -> esperar .)
    function        reduce using rule 42 (loop -> esperar .)
    tk_if           reduce using rule 42 (loop -> esperar .)
    tk_while        reduce using rule 42 (loop -> esperar .)
    foward          reduce using rule 42 (loop -> esperar .)
    backward        reduce using rule 42 (loop -> esperar .)
    left            reduce using rule 42 (loop -> esperar .)
    right           reduce using rule 42 (loop -> esperar .)
    wait            reduce using rule 42 (loop -> esperar .)
    stop            reduce using rule 42 (loop -> esperar .)
    end             reduce using rule 42 (loop -> esperar .)
    RBRACE          reduce using rule 42 (loop -> esperar .)


state 28

    (43) loop -> parar .

    library         reduce using rule 43 (loop -> parar .)
    IDENT           reduce using rule 43 (loop -> parar .)
    var             reduce using rule 43 (loop -> parar .)
    procedure       reduce using rule 43 (loop -> parar .)
    PIN             reduce using rule 43 (loop -> parar .)
    function        reduce using rule 43 (loop -> parar .)
    tk_if           reduce using rule 43 (loop -> parar .)
    tk_while        reduce using rule 43 (loop -> parar .)
    foward          reduce using rule 43 (loop -> parar .)
    backward        reduce using rule 43 (loop -> parar .)
    left            reduce using rule 43 (loop -> parar .)
    right           reduce using rule 43 (loop -> parar .)
    wait            reduce using rule 43 (loop -> parar .)
    stop            reduce using rule 43 (loop -> parar .)
    end             reduce using rule 43 (loop -> parar .)
    RBRACE          reduce using rule 43 (loop -> parar .)


state 29

    (26) if -> tk_if . LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> tk_if . LPAREN condicion RPAREN LBRACE codigo RBRACE else

    LPAREN          shift and go to state 57


state 30

    (29) while -> tk_while . LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON

    LPAREN          shift and go to state 58


state 31

    (45) adelante -> foward . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 59


state 32

    (46) atras -> backward . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 60


state 33

    (47) izquierda -> left . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 61


state 34

    (48) derecha -> right . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 62


state 35

    (49) esperar -> wait . LPAREN ENTERO RPAREN SEMICOLON

    LPAREN          shift and go to state 63


state 36

    (50) parar -> stop . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 64


state 37

    (1) beginend -> begin codigo end .

    $end            reduce using rule 1 (beginend -> begin codigo end .)


state 38

    (3) codigo -> sentencia codigo .

    end             reduce using rule 3 (codigo -> sentencia codigo .)
    RBRACE          reduce using rule 3 (codigo -> sentencia codigo .)


state 39

    (4) sentencia -> libreria sentencia .

    library         reduce using rule 4 (sentencia -> libreria sentencia .)
    IDENT           reduce using rule 4 (sentencia -> libreria sentencia .)
    var             reduce using rule 4 (sentencia -> libreria sentencia .)
    procedure       reduce using rule 4 (sentencia -> libreria sentencia .)
    PIN             reduce using rule 4 (sentencia -> libreria sentencia .)
    function        reduce using rule 4 (sentencia -> libreria sentencia .)
    tk_if           reduce using rule 4 (sentencia -> libreria sentencia .)
    tk_while        reduce using rule 4 (sentencia -> libreria sentencia .)
    foward          reduce using rule 4 (sentencia -> libreria sentencia .)
    backward        reduce using rule 4 (sentencia -> libreria sentencia .)
    left            reduce using rule 4 (sentencia -> libreria sentencia .)
    right           reduce using rule 4 (sentencia -> libreria sentencia .)
    wait            reduce using rule 4 (sentencia -> libreria sentencia .)
    stop            reduce using rule 4 (sentencia -> libreria sentencia .)
    end             reduce using rule 4 (sentencia -> libreria sentencia .)
    RBRACE          reduce using rule 4 (sentencia -> libreria sentencia .)


state 40

    (5) sentencia -> variable sentencia .

    library         reduce using rule 5 (sentencia -> variable sentencia .)
    IDENT           reduce using rule 5 (sentencia -> variable sentencia .)
    var             reduce using rule 5 (sentencia -> variable sentencia .)
    procedure       reduce using rule 5 (sentencia -> variable sentencia .)
    PIN             reduce using rule 5 (sentencia -> variable sentencia .)
    function        reduce using rule 5 (sentencia -> variable sentencia .)
    tk_if           reduce using rule 5 (sentencia -> variable sentencia .)
    tk_while        reduce using rule 5 (sentencia -> variable sentencia .)
    foward          reduce using rule 5 (sentencia -> variable sentencia .)
    backward        reduce using rule 5 (sentencia -> variable sentencia .)
    left            reduce using rule 5 (sentencia -> variable sentencia .)
    right           reduce using rule 5 (sentencia -> variable sentencia .)
    wait            reduce using rule 5 (sentencia -> variable sentencia .)
    stop            reduce using rule 5 (sentencia -> variable sentencia .)
    end             reduce using rule 5 (sentencia -> variable sentencia .)
    RBRACE          reduce using rule 5 (sentencia -> variable sentencia .)


state 41

    (6) sentencia -> control sentencia .

    library         reduce using rule 6 (sentencia -> control sentencia .)
    IDENT           reduce using rule 6 (sentencia -> control sentencia .)
    var             reduce using rule 6 (sentencia -> control sentencia .)
    procedure       reduce using rule 6 (sentencia -> control sentencia .)
    PIN             reduce using rule 6 (sentencia -> control sentencia .)
    function        reduce using rule 6 (sentencia -> control sentencia .)
    tk_if           reduce using rule 6 (sentencia -> control sentencia .)
    tk_while        reduce using rule 6 (sentencia -> control sentencia .)
    foward          reduce using rule 6 (sentencia -> control sentencia .)
    backward        reduce using rule 6 (sentencia -> control sentencia .)
    left            reduce using rule 6 (sentencia -> control sentencia .)
    right           reduce using rule 6 (sentencia -> control sentencia .)
    wait            reduce using rule 6 (sentencia -> control sentencia .)
    stop            reduce using rule 6 (sentencia -> control sentencia .)
    end             reduce using rule 6 (sentencia -> control sentencia .)
    RBRACE          reduce using rule 6 (sentencia -> control sentencia .)


state 42

    (7) sentencia -> definicion sentencia .

    library         reduce using rule 7 (sentencia -> definicion sentencia .)
    IDENT           reduce using rule 7 (sentencia -> definicion sentencia .)
    var             reduce using rule 7 (sentencia -> definicion sentencia .)
    procedure       reduce using rule 7 (sentencia -> definicion sentencia .)
    PIN             reduce using rule 7 (sentencia -> definicion sentencia .)
    function        reduce using rule 7 (sentencia -> definicion sentencia .)
    tk_if           reduce using rule 7 (sentencia -> definicion sentencia .)
    tk_while        reduce using rule 7 (sentencia -> definicion sentencia .)
    foward          reduce using rule 7 (sentencia -> definicion sentencia .)
    backward        reduce using rule 7 (sentencia -> definicion sentencia .)
    left            reduce using rule 7 (sentencia -> definicion sentencia .)
    right           reduce using rule 7 (sentencia -> definicion sentencia .)
    wait            reduce using rule 7 (sentencia -> definicion sentencia .)
    stop            reduce using rule 7 (sentencia -> definicion sentencia .)
    end             reduce using rule 7 (sentencia -> definicion sentencia .)
    RBRACE          reduce using rule 7 (sentencia -> definicion sentencia .)


state 43

    (8) sentencia -> procedimiento sentencia .

    library         reduce using rule 8 (sentencia -> procedimiento sentencia .)
    IDENT           reduce using rule 8 (sentencia -> procedimiento sentencia .)
    var             reduce using rule 8 (sentencia -> procedimiento sentencia .)
    procedure       reduce using rule 8 (sentencia -> procedimiento sentencia .)
    PIN             reduce using rule 8 (sentencia -> procedimiento sentencia .)
    function        reduce using rule 8 (sentencia -> procedimiento sentencia .)
    tk_if           reduce using rule 8 (sentencia -> procedimiento sentencia .)
    tk_while        reduce using rule 8 (sentencia -> procedimiento sentencia .)
    foward          reduce using rule 8 (sentencia -> procedimiento sentencia .)
    backward        reduce using rule 8 (sentencia -> procedimiento sentencia .)
    left            reduce using rule 8 (sentencia -> procedimiento sentencia .)
    right           reduce using rule 8 (sentencia -> procedimiento sentencia .)
    wait            reduce using rule 8 (sentencia -> procedimiento sentencia .)
    stop            reduce using rule 8 (sentencia -> procedimiento sentencia .)
    end             reduce using rule 8 (sentencia -> procedimiento sentencia .)
    RBRACE          reduce using rule 8 (sentencia -> procedimiento sentencia .)


state 44

    (9) sentencia -> pin sentencia .

    library         reduce using rule 9 (sentencia -> pin sentencia .)
    IDENT           reduce using rule 9 (sentencia -> pin sentencia .)
    var             reduce using rule 9 (sentencia -> pin sentencia .)
    procedure       reduce using rule 9 (sentencia -> pin sentencia .)
    PIN             reduce using rule 9 (sentencia -> pin sentencia .)
    function        reduce using rule 9 (sentencia -> pin sentencia .)
    tk_if           reduce using rule 9 (sentencia -> pin sentencia .)
    tk_while        reduce using rule 9 (sentencia -> pin sentencia .)
    foward          reduce using rule 9 (sentencia -> pin sentencia .)
    backward        reduce using rule 9 (sentencia -> pin sentencia .)
    left            reduce using rule 9 (sentencia -> pin sentencia .)
    right           reduce using rule 9 (sentencia -> pin sentencia .)
    wait            reduce using rule 9 (sentencia -> pin sentencia .)
    stop            reduce using rule 9 (sentencia -> pin sentencia .)
    end             reduce using rule 9 (sentencia -> pin sentencia .)
    RBRACE          reduce using rule 9 (sentencia -> pin sentencia .)


state 45

    (10) sentencia -> funcion sentencia .

    library         reduce using rule 10 (sentencia -> funcion sentencia .)
    IDENT           reduce using rule 10 (sentencia -> funcion sentencia .)
    var             reduce using rule 10 (sentencia -> funcion sentencia .)
    procedure       reduce using rule 10 (sentencia -> funcion sentencia .)
    PIN             reduce using rule 10 (sentencia -> funcion sentencia .)
    function        reduce using rule 10 (sentencia -> funcion sentencia .)
    tk_if           reduce using rule 10 (sentencia -> funcion sentencia .)
    tk_while        reduce using rule 10 (sentencia -> funcion sentencia .)
    foward          reduce using rule 10 (sentencia -> funcion sentencia .)
    backward        reduce using rule 10 (sentencia -> funcion sentencia .)
    left            reduce using rule 10 (sentencia -> funcion sentencia .)
    right           reduce using rule 10 (sentencia -> funcion sentencia .)
    wait            reduce using rule 10 (sentencia -> funcion sentencia .)
    stop            reduce using rule 10 (sentencia -> funcion sentencia .)
    end             reduce using rule 10 (sentencia -> funcion sentencia .)
    RBRACE          reduce using rule 10 (sentencia -> funcion sentencia .)


state 46

    (11) sentencia -> loop sentencia .

    library         reduce using rule 11 (sentencia -> loop sentencia .)
    IDENT           reduce using rule 11 (sentencia -> loop sentencia .)
    var             reduce using rule 11 (sentencia -> loop sentencia .)
    procedure       reduce using rule 11 (sentencia -> loop sentencia .)
    PIN             reduce using rule 11 (sentencia -> loop sentencia .)
    function        reduce using rule 11 (sentencia -> loop sentencia .)
    tk_if           reduce using rule 11 (sentencia -> loop sentencia .)
    tk_while        reduce using rule 11 (sentencia -> loop sentencia .)
    foward          reduce using rule 11 (sentencia -> loop sentencia .)
    backward        reduce using rule 11 (sentencia -> loop sentencia .)
    left            reduce using rule 11 (sentencia -> loop sentencia .)
    right           reduce using rule 11 (sentencia -> loop sentencia .)
    wait            reduce using rule 11 (sentencia -> loop sentencia .)
    stop            reduce using rule 11 (sentencia -> loop sentencia .)
    end             reduce using rule 11 (sentencia -> loop sentencia .)
    RBRACE          reduce using rule 11 (sentencia -> loop sentencia .)


state 47

    (36) libreria -> library LPAREN . SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON

    SINGLEDOT       shift and go to state 65


state 48

    (21) variable -> IDENT ASSING . ENTERO SEMICOLON variable
    (22) variable -> IDENT ASSING . ENTERO SEMICOLON

    ENTERO          shift and go to state 66


state 49

    (17) definicion -> var LPAREN . IDENT VAR_ASSING INTEGER RPAREN SEMICOLON

    IDENT           shift and go to state 67


state 50

    (31) procedimiento -> procedure IDENT . LPAREN argumento RPAREN SEMICOLON

    LPAREN          shift and go to state 68


state 51

    (32) pin -> PIN LPAREN . IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON

    IDENT           shift and go to state 69


state 52

    (30) funcion -> function var_tipo . LPAREN argumento RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 53

    (13) var_tipo -> INTEGER .

    LPAREN          reduce using rule 13 (var_tipo -> INTEGER .)
    RPAREN          reduce using rule 13 (var_tipo -> INTEGER .)


state 54

    (14) var_tipo -> STRING .

    LPAREN          reduce using rule 14 (var_tipo -> STRING .)
    RPAREN          reduce using rule 14 (var_tipo -> STRING .)


state 55

    (15) var_tipo -> FLOAT .

    LPAREN          reduce using rule 15 (var_tipo -> FLOAT .)
    RPAREN          reduce using rule 15 (var_tipo -> FLOAT .)


state 56

    (16) var_tipo -> BOOLEAN .

    LPAREN          reduce using rule 16 (var_tipo -> BOOLEAN .)
    RPAREN          reduce using rule 16 (var_tipo -> BOOLEAN .)


state 57

    (26) if -> tk_if LPAREN . condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> tk_if LPAREN . condicion RPAREN LBRACE codigo RBRACE else
    (61) condicion -> . expression relacion expression
    (62) condicion -> . NOT expression
    (63) condicion -> . expression logico expression
    (51) expression -> . expression SUM term
    (52) expression -> . expression RESTA term
    (53) expression -> . term
    (54) expression -> . tipo
    (55) expression -> . variable
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (18) tipo -> . ENTERO
    (19) tipo -> . DECIMAL
    (20) tipo -> . LOGICO
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 74
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 80
    LOGICO          shift and go to state 81
    IDENT           shift and go to state 15
    LPAREN          shift and go to state 71

    condicion                      shift and go to state 72
    expression                     shift and go to state 73
    term                           shift and go to state 75
    tipo                           shift and go to state 76
    variable                       shift and go to state 77
    factor                         shift and go to state 78

state 58

    (29) while -> tk_while LPAREN . condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (61) condicion -> . expression relacion expression
    (62) condicion -> . NOT expression
    (63) condicion -> . expression logico expression
    (51) expression -> . expression SUM term
    (52) expression -> . expression RESTA term
    (53) expression -> . term
    (54) expression -> . tipo
    (55) expression -> . variable
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (18) tipo -> . ENTERO
    (19) tipo -> . DECIMAL
    (20) tipo -> . LOGICO
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 74
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 80
    LOGICO          shift and go to state 81
    IDENT           shift and go to state 15
    LPAREN          shift and go to state 71

    condicion                      shift and go to state 82
    expression                     shift and go to state 73
    term                           shift and go to state 75
    tipo                           shift and go to state 76
    variable                       shift and go to state 77
    factor                         shift and go to state 78

state 59

    (45) adelante -> foward LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 83


state 60

    (46) atras -> backward LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 84


state 61

    (47) izquierda -> left LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 85


state 62

    (48) derecha -> right LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 86


state 63

    (49) esperar -> wait LPAREN . ENTERO RPAREN SEMICOLON

    ENTERO          shift and go to state 87


state 64

    (50) parar -> stop LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 88


state 65

    (36) libreria -> library LPAREN SINGLEDOT . IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON

    IDENT           shift and go to state 89


state 66

    (21) variable -> IDENT ASSING ENTERO . SEMICOLON variable
    (22) variable -> IDENT ASSING ENTERO . SEMICOLON

    SEMICOLON       shift and go to state 90


state 67

    (17) definicion -> var LPAREN IDENT . VAR_ASSING INTEGER RPAREN SEMICOLON

    VAR_ASSING      shift and go to state 91


state 68

    (31) procedimiento -> procedure IDENT LPAREN . argumento RPAREN SEMICOLON
    (33) argumento -> . argumento
    (34) argumento -> . LPAREN IDENT VAR_ASSING var_tipo RPAREN
    (35) argumento -> . empty
    (71) empty -> .

    LPAREN          shift and go to state 92
    RPAREN          reduce using rule 71 (empty -> .)

    argumento                      shift and go to state 93
    empty                          shift and go to state 94

state 69

    (32) pin -> PIN LPAREN IDENT . VAR_ASSING PINTYPE RPAREN SEMICOLON

    VAR_ASSING      shift and go to state 95


state 70

    (30) funcion -> function var_tipo LPAREN . argumento RPAREN SEMICOLON
    (33) argumento -> . argumento
    (34) argumento -> . LPAREN IDENT VAR_ASSING var_tipo RPAREN
    (35) argumento -> . empty
    (71) empty -> .

    LPAREN          shift and go to state 92
    RPAREN          reduce using rule 71 (empty -> .)

    argumento                      shift and go to state 96
    empty                          shift and go to state 94

state 71

    (60) factor -> LPAREN . expression RPAREN
    (51) expression -> . expression SUM term
    (52) expression -> . expression RESTA term
    (53) expression -> . term
    (54) expression -> . tipo
    (55) expression -> . variable
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (18) tipo -> . ENTERO
    (19) tipo -> . DECIMAL
    (20) tipo -> . LOGICO
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 80
    LOGICO          shift and go to state 81
    IDENT           shift and go to state 15
    LPAREN          shift and go to state 71

    expression                     shift and go to state 97
    term                           shift and go to state 75
    tipo                           shift and go to state 76
    variable                       shift and go to state 77
    factor                         shift and go to state 78

state 72

    (26) if -> tk_if LPAREN condicion . RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> tk_if LPAREN condicion . RPAREN LBRACE codigo RBRACE else

    RPAREN          shift and go to state 98


state 73

    (61) condicion -> expression . relacion expression
    (63) condicion -> expression . logico expression
    (51) expression -> expression . SUM term
    (52) expression -> expression . RESTA term
    (64) relacion -> . IGUAL
    (65) relacion -> . MAYOR
    (66) relacion -> . MENOR
    (67) relacion -> . MAYOR_IGUAL
    (68) relacion -> . MENOR_IGUAL
    (69) logico -> . and
    (70) logico -> . or

    SUM             shift and go to state 101
    RESTA           shift and go to state 102
    IGUAL           shift and go to state 103
    MAYOR           shift and go to state 104
    MENOR           shift and go to state 105
    MAYOR_IGUAL     shift and go to state 106
    MENOR_IGUAL     shift and go to state 107
    and             shift and go to state 108
    or              shift and go to state 109

    relacion                       shift and go to state 99
    logico                         shift and go to state 100

state 74

    (62) condicion -> NOT . expression
    (51) expression -> . expression SUM term
    (52) expression -> . expression RESTA term
    (53) expression -> . term
    (54) expression -> . tipo
    (55) expression -> . variable
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (18) tipo -> . ENTERO
    (19) tipo -> . DECIMAL
    (20) tipo -> . LOGICO
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 80
    LOGICO          shift and go to state 81
    IDENT           shift and go to state 15
    LPAREN          shift and go to state 71

    expression                     shift and go to state 110
    term                           shift and go to state 75
    tipo                           shift and go to state 76
    variable                       shift and go to state 77
    factor                         shift and go to state 78

state 75

    (53) expression -> term .
    (56) term -> term . PROD factor
    (57) term -> term . DIV factor

    SUM             reduce using rule 53 (expression -> term .)
    RESTA           reduce using rule 53 (expression -> term .)
    IGUAL           reduce using rule 53 (expression -> term .)
    MAYOR           reduce using rule 53 (expression -> term .)
    MENOR           reduce using rule 53 (expression -> term .)
    MAYOR_IGUAL     reduce using rule 53 (expression -> term .)
    MENOR_IGUAL     reduce using rule 53 (expression -> term .)
    and             reduce using rule 53 (expression -> term .)
    or              reduce using rule 53 (expression -> term .)
    RPAREN          reduce using rule 53 (expression -> term .)
    PROD            shift and go to state 111
    DIV             shift and go to state 112


state 76

    (54) expression -> tipo .

    SUM             reduce using rule 54 (expression -> tipo .)
    RESTA           reduce using rule 54 (expression -> tipo .)
    IGUAL           reduce using rule 54 (expression -> tipo .)
    MAYOR           reduce using rule 54 (expression -> tipo .)
    MENOR           reduce using rule 54 (expression -> tipo .)
    MAYOR_IGUAL     reduce using rule 54 (expression -> tipo .)
    MENOR_IGUAL     reduce using rule 54 (expression -> tipo .)
    and             reduce using rule 54 (expression -> tipo .)
    or              reduce using rule 54 (expression -> tipo .)
    RPAREN          reduce using rule 54 (expression -> tipo .)


state 77

    (55) expression -> variable .

    SUM             reduce using rule 55 (expression -> variable .)
    RESTA           reduce using rule 55 (expression -> variable .)
    IGUAL           reduce using rule 55 (expression -> variable .)
    MAYOR           reduce using rule 55 (expression -> variable .)
    MENOR           reduce using rule 55 (expression -> variable .)
    MAYOR_IGUAL     reduce using rule 55 (expression -> variable .)
    MENOR_IGUAL     reduce using rule 55 (expression -> variable .)
    and             reduce using rule 55 (expression -> variable .)
    or              reduce using rule 55 (expression -> variable .)
    RPAREN          reduce using rule 55 (expression -> variable .)


state 78

    (58) term -> factor .

    PROD            reduce using rule 58 (term -> factor .)
    DIV             reduce using rule 58 (term -> factor .)
    SUM             reduce using rule 58 (term -> factor .)
    RESTA           reduce using rule 58 (term -> factor .)
    IGUAL           reduce using rule 58 (term -> factor .)
    MAYOR           reduce using rule 58 (term -> factor .)
    MENOR           reduce using rule 58 (term -> factor .)
    MAYOR_IGUAL     reduce using rule 58 (term -> factor .)
    MENOR_IGUAL     reduce using rule 58 (term -> factor .)
    and             reduce using rule 58 (term -> factor .)
    or              reduce using rule 58 (term -> factor .)
    RPAREN          reduce using rule 58 (term -> factor .)


state 79

    (18) tipo -> ENTERO .
    (59) factor -> ENTERO .

  ! reduce/reduce conflict for SUM resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for IGUAL resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MAYOR resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MENOR resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MAYOR_IGUAL resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MENOR_IGUAL resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for and resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for or resolved using rule 18 (tipo -> ENTERO .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (tipo -> ENTERO .)
    SUM             reduce using rule 18 (tipo -> ENTERO .)
    RESTA           reduce using rule 18 (tipo -> ENTERO .)
    IGUAL           reduce using rule 18 (tipo -> ENTERO .)
    MAYOR           reduce using rule 18 (tipo -> ENTERO .)
    MENOR           reduce using rule 18 (tipo -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 18 (tipo -> ENTERO .)
    MENOR_IGUAL     reduce using rule 18 (tipo -> ENTERO .)
    and             reduce using rule 18 (tipo -> ENTERO .)
    or              reduce using rule 18 (tipo -> ENTERO .)
    RPAREN          reduce using rule 18 (tipo -> ENTERO .)
    PROD            reduce using rule 59 (factor -> ENTERO .)
    DIV             reduce using rule 59 (factor -> ENTERO .)

  ! SUM             [ reduce using rule 59 (factor -> ENTERO .) ]
  ! RESTA           [ reduce using rule 59 (factor -> ENTERO .) ]
  ! IGUAL           [ reduce using rule 59 (factor -> ENTERO .) ]
  ! MAYOR           [ reduce using rule 59 (factor -> ENTERO .) ]
  ! MENOR           [ reduce using rule 59 (factor -> ENTERO .) ]
  ! MAYOR_IGUAL     [ reduce using rule 59 (factor -> ENTERO .) ]
  ! MENOR_IGUAL     [ reduce using rule 59 (factor -> ENTERO .) ]
  ! and             [ reduce using rule 59 (factor -> ENTERO .) ]
  ! or              [ reduce using rule 59 (factor -> ENTERO .) ]
  ! RPAREN          [ reduce using rule 59 (factor -> ENTERO .) ]


state 80

    (19) tipo -> DECIMAL .

    SUM             reduce using rule 19 (tipo -> DECIMAL .)
    RESTA           reduce using rule 19 (tipo -> DECIMAL .)
    IGUAL           reduce using rule 19 (tipo -> DECIMAL .)
    MAYOR           reduce using rule 19 (tipo -> DECIMAL .)
    MENOR           reduce using rule 19 (tipo -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 19 (tipo -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 19 (tipo -> DECIMAL .)
    and             reduce using rule 19 (tipo -> DECIMAL .)
    or              reduce using rule 19 (tipo -> DECIMAL .)
    RPAREN          reduce using rule 19 (tipo -> DECIMAL .)


state 81

    (20) tipo -> LOGICO .

    SUM             reduce using rule 20 (tipo -> LOGICO .)
    RESTA           reduce using rule 20 (tipo -> LOGICO .)
    IGUAL           reduce using rule 20 (tipo -> LOGICO .)
    MAYOR           reduce using rule 20 (tipo -> LOGICO .)
    MENOR           reduce using rule 20 (tipo -> LOGICO .)
    MAYOR_IGUAL     reduce using rule 20 (tipo -> LOGICO .)
    MENOR_IGUAL     reduce using rule 20 (tipo -> LOGICO .)
    and             reduce using rule 20 (tipo -> LOGICO .)
    or              reduce using rule 20 (tipo -> LOGICO .)
    RPAREN          reduce using rule 20 (tipo -> LOGICO .)


state 82

    (29) while -> tk_while LPAREN condicion . RPAREN LBRACE codigo RBRACE SEMICOLON

    RPAREN          shift and go to state 113


state 83

    (45) adelante -> foward LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 114


state 84

    (46) atras -> backward LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 85

    (47) izquierda -> left LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 86

    (48) derecha -> right LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 87

    (49) esperar -> wait LPAREN ENTERO . RPAREN SEMICOLON

    RPAREN          shift and go to state 118


state 88

    (50) parar -> stop LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 119


state 89

    (36) libreria -> library LPAREN SINGLEDOT IDENT . PUNTO IDENT SINGLEDOT RPAREN SEMICOLON

    PUNTO           shift and go to state 120


state 90

    (21) variable -> IDENT ASSING ENTERO SEMICOLON . variable
    (22) variable -> IDENT ASSING ENTERO SEMICOLON .
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON

  ! shift/reduce conflict for IDENT resolved as shift
    library         reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    var             reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    procedure       reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    PIN             reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    function        reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    tk_if           reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    tk_while        reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    foward          reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    backward        reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    left            reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    right           reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    wait            reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    stop            reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    end             reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    RBRACE          reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    SUM             reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    RESTA           reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    IGUAL           reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    MAYOR           reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    MENOR           reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    MAYOR_IGUAL     reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    MENOR_IGUAL     reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    and             reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    or              reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    RPAREN          reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .)
    IDENT           shift and go to state 15

  ! IDENT           [ reduce using rule 22 (variable -> IDENT ASSING ENTERO SEMICOLON .) ]

    variable                       shift and go to state 121

state 91

    (17) definicion -> var LPAREN IDENT VAR_ASSING . INTEGER RPAREN SEMICOLON

    INTEGER         shift and go to state 122


state 92

    (34) argumento -> LPAREN . IDENT VAR_ASSING var_tipo RPAREN

    IDENT           shift and go to state 123


state 93

    (31) procedimiento -> procedure IDENT LPAREN argumento . RPAREN SEMICOLON
    (33) argumento -> argumento .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 124

  ! RPAREN          [ reduce using rule 33 (argumento -> argumento .) ]


state 94

    (35) argumento -> empty .

    RPAREN          reduce using rule 35 (argumento -> empty .)


state 95

    (32) pin -> PIN LPAREN IDENT VAR_ASSING . PINTYPE RPAREN SEMICOLON

    PINTYPE         shift and go to state 125


state 96

    (30) funcion -> function var_tipo LPAREN argumento . RPAREN SEMICOLON
    (33) argumento -> argumento .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 126

  ! RPAREN          [ reduce using rule 33 (argumento -> argumento .) ]


state 97

    (60) factor -> LPAREN expression . RPAREN
    (51) expression -> expression . SUM term
    (52) expression -> expression . RESTA term

    RPAREN          shift and go to state 127
    SUM             shift and go to state 101
    RESTA           shift and go to state 102


state 98

    (26) if -> tk_if LPAREN condicion RPAREN . LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> tk_if LPAREN condicion RPAREN . LBRACE codigo RBRACE else

    LBRACE          shift and go to state 128


state 99

    (61) condicion -> expression relacion . expression
    (51) expression -> . expression SUM term
    (52) expression -> . expression RESTA term
    (53) expression -> . term
    (54) expression -> . tipo
    (55) expression -> . variable
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (18) tipo -> . ENTERO
    (19) tipo -> . DECIMAL
    (20) tipo -> . LOGICO
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 80
    LOGICO          shift and go to state 81
    IDENT           shift and go to state 15
    LPAREN          shift and go to state 71

    expression                     shift and go to state 129
    term                           shift and go to state 75
    tipo                           shift and go to state 76
    variable                       shift and go to state 77
    factor                         shift and go to state 78

state 100

    (63) condicion -> expression logico . expression
    (51) expression -> . expression SUM term
    (52) expression -> . expression RESTA term
    (53) expression -> . term
    (54) expression -> . tipo
    (55) expression -> . variable
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (18) tipo -> . ENTERO
    (19) tipo -> . DECIMAL
    (20) tipo -> . LOGICO
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 80
    LOGICO          shift and go to state 81
    IDENT           shift and go to state 15
    LPAREN          shift and go to state 71

    expression                     shift and go to state 130
    term                           shift and go to state 75
    tipo                           shift and go to state 76
    variable                       shift and go to state 77
    factor                         shift and go to state 78

state 101

    (51) expression -> expression SUM . term
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 132
    LPAREN          shift and go to state 71

    term                           shift and go to state 131
    factor                         shift and go to state 78

state 102

    (52) expression -> expression RESTA . term
    (56) term -> . term PROD factor
    (57) term -> . term DIV factor
    (58) term -> . factor
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 132
    LPAREN          shift and go to state 71

    term                           shift and go to state 133
    factor                         shift and go to state 78

state 103

    (64) relacion -> IGUAL .

    ENTERO          reduce using rule 64 (relacion -> IGUAL .)
    DECIMAL         reduce using rule 64 (relacion -> IGUAL .)
    LOGICO          reduce using rule 64 (relacion -> IGUAL .)
    IDENT           reduce using rule 64 (relacion -> IGUAL .)
    LPAREN          reduce using rule 64 (relacion -> IGUAL .)


state 104

    (65) relacion -> MAYOR .

    ENTERO          reduce using rule 65 (relacion -> MAYOR .)
    DECIMAL         reduce using rule 65 (relacion -> MAYOR .)
    LOGICO          reduce using rule 65 (relacion -> MAYOR .)
    IDENT           reduce using rule 65 (relacion -> MAYOR .)
    LPAREN          reduce using rule 65 (relacion -> MAYOR .)


state 105

    (66) relacion -> MENOR .

    ENTERO          reduce using rule 66 (relacion -> MENOR .)
    DECIMAL         reduce using rule 66 (relacion -> MENOR .)
    LOGICO          reduce using rule 66 (relacion -> MENOR .)
    IDENT           reduce using rule 66 (relacion -> MENOR .)
    LPAREN          reduce using rule 66 (relacion -> MENOR .)


state 106

    (67) relacion -> MAYOR_IGUAL .

    ENTERO          reduce using rule 67 (relacion -> MAYOR_IGUAL .)
    DECIMAL         reduce using rule 67 (relacion -> MAYOR_IGUAL .)
    LOGICO          reduce using rule 67 (relacion -> MAYOR_IGUAL .)
    IDENT           reduce using rule 67 (relacion -> MAYOR_IGUAL .)
    LPAREN          reduce using rule 67 (relacion -> MAYOR_IGUAL .)


state 107

    (68) relacion -> MENOR_IGUAL .

    ENTERO          reduce using rule 68 (relacion -> MENOR_IGUAL .)
    DECIMAL         reduce using rule 68 (relacion -> MENOR_IGUAL .)
    LOGICO          reduce using rule 68 (relacion -> MENOR_IGUAL .)
    IDENT           reduce using rule 68 (relacion -> MENOR_IGUAL .)
    LPAREN          reduce using rule 68 (relacion -> MENOR_IGUAL .)


state 108

    (69) logico -> and .

    ENTERO          reduce using rule 69 (logico -> and .)
    DECIMAL         reduce using rule 69 (logico -> and .)
    LOGICO          reduce using rule 69 (logico -> and .)
    IDENT           reduce using rule 69 (logico -> and .)
    LPAREN          reduce using rule 69 (logico -> and .)


state 109

    (70) logico -> or .

    ENTERO          reduce using rule 70 (logico -> or .)
    DECIMAL         reduce using rule 70 (logico -> or .)
    LOGICO          reduce using rule 70 (logico -> or .)
    IDENT           reduce using rule 70 (logico -> or .)
    LPAREN          reduce using rule 70 (logico -> or .)


state 110

    (62) condicion -> NOT expression .
    (51) expression -> expression . SUM term
    (52) expression -> expression . RESTA term

    RPAREN          reduce using rule 62 (condicion -> NOT expression .)
    SUM             shift and go to state 101
    RESTA           shift and go to state 102


state 111

    (56) term -> term PROD . factor
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 132
    LPAREN          shift and go to state 71

    factor                         shift and go to state 134

state 112

    (57) term -> term DIV . factor
    (59) factor -> . ENTERO
    (60) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 132
    LPAREN          shift and go to state 71

    factor                         shift and go to state 135

state 113

    (29) while -> tk_while LPAREN condicion RPAREN . LBRACE codigo RBRACE SEMICOLON

    LBRACE          shift and go to state 136


state 114

    (45) adelante -> foward LPAREN RPAREN SEMICOLON .

    library         reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    PIN             reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 45 (adelante -> foward LPAREN RPAREN SEMICOLON .)


state 115

    (46) atras -> backward LPAREN RPAREN SEMICOLON .

    library         reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    PIN             reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 46 (atras -> backward LPAREN RPAREN SEMICOLON .)


state 116

    (47) izquierda -> left LPAREN RPAREN SEMICOLON .

    library         reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    PIN             reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 47 (izquierda -> left LPAREN RPAREN SEMICOLON .)


state 117

    (48) derecha -> right LPAREN RPAREN SEMICOLON .

    library         reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    PIN             reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 48 (derecha -> right LPAREN RPAREN SEMICOLON .)


state 118

    (49) esperar -> wait LPAREN ENTERO RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 137


state 119

    (50) parar -> stop LPAREN RPAREN SEMICOLON .

    library         reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    PIN             reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 50 (parar -> stop LPAREN RPAREN SEMICOLON .)


state 120

    (36) libreria -> library LPAREN SINGLEDOT IDENT PUNTO . IDENT SINGLEDOT RPAREN SEMICOLON

    IDENT           shift and go to state 138


state 121

    (21) variable -> IDENT ASSING ENTERO SEMICOLON variable .

    library         reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    IDENT           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    var             reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    procedure       reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    PIN             reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    function        reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    tk_if           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    tk_while        reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    foward          reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    backward        reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    left            reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    right           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    wait            reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    stop            reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    end             reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    RBRACE          reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    SUM             reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    RESTA           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    IGUAL           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    MAYOR           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    MENOR           reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    MAYOR_IGUAL     reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    MENOR_IGUAL     reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    and             reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    or              reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)
    RPAREN          reduce using rule 21 (variable -> IDENT ASSING ENTERO SEMICOLON variable .)


state 122

    (17) definicion -> var LPAREN IDENT VAR_ASSING INTEGER . RPAREN SEMICOLON

    RPAREN          shift and go to state 139


state 123

    (34) argumento -> LPAREN IDENT . VAR_ASSING var_tipo RPAREN

    VAR_ASSING      shift and go to state 140


state 124

    (31) procedimiento -> procedure IDENT LPAREN argumento RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 141


state 125

    (32) pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE . RPAREN SEMICOLON

    RPAREN          shift and go to state 142


state 126

    (30) funcion -> function var_tipo LPAREN argumento RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 143


state 127

    (60) factor -> LPAREN expression RPAREN .

    PROD            reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    SUM             reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    RESTA           reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    IGUAL           reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    MAYOR           reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    MENOR           reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    MAYOR_IGUAL     reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    MENOR_IGUAL     reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    and             reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    or              reduce using rule 60 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 60 (factor -> LPAREN expression RPAREN .)


state 128

    (26) if -> tk_if LPAREN condicion RPAREN LBRACE . codigo RBRACE SEMICOLON
    (27) ifelse -> tk_if LPAREN condicion RPAREN LBRACE . codigo RBRACE else
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    codigo                         shift and go to state 144
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 129

    (61) condicion -> expression relacion expression .
    (51) expression -> expression . SUM term
    (52) expression -> expression . RESTA term

    RPAREN          reduce using rule 61 (condicion -> expression relacion expression .)
    SUM             shift and go to state 101
    RESTA           shift and go to state 102


state 130

    (63) condicion -> expression logico expression .
    (51) expression -> expression . SUM term
    (52) expression -> expression . RESTA term

    RPAREN          reduce using rule 63 (condicion -> expression logico expression .)
    SUM             shift and go to state 101
    RESTA           shift and go to state 102


state 131

    (51) expression -> expression SUM term .
    (56) term -> term . PROD factor
    (57) term -> term . DIV factor

    SUM             reduce using rule 51 (expression -> expression SUM term .)
    RESTA           reduce using rule 51 (expression -> expression SUM term .)
    IGUAL           reduce using rule 51 (expression -> expression SUM term .)
    MAYOR           reduce using rule 51 (expression -> expression SUM term .)
    MENOR           reduce using rule 51 (expression -> expression SUM term .)
    MAYOR_IGUAL     reduce using rule 51 (expression -> expression SUM term .)
    MENOR_IGUAL     reduce using rule 51 (expression -> expression SUM term .)
    and             reduce using rule 51 (expression -> expression SUM term .)
    or              reduce using rule 51 (expression -> expression SUM term .)
    RPAREN          reduce using rule 51 (expression -> expression SUM term .)
    PROD            shift and go to state 111
    DIV             shift and go to state 112


state 132

    (59) factor -> ENTERO .

    PROD            reduce using rule 59 (factor -> ENTERO .)
    DIV             reduce using rule 59 (factor -> ENTERO .)
    SUM             reduce using rule 59 (factor -> ENTERO .)
    RESTA           reduce using rule 59 (factor -> ENTERO .)
    IGUAL           reduce using rule 59 (factor -> ENTERO .)
    MAYOR           reduce using rule 59 (factor -> ENTERO .)
    MENOR           reduce using rule 59 (factor -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 59 (factor -> ENTERO .)
    MENOR_IGUAL     reduce using rule 59 (factor -> ENTERO .)
    and             reduce using rule 59 (factor -> ENTERO .)
    or              reduce using rule 59 (factor -> ENTERO .)
    RPAREN          reduce using rule 59 (factor -> ENTERO .)


state 133

    (52) expression -> expression RESTA term .
    (56) term -> term . PROD factor
    (57) term -> term . DIV factor

    SUM             reduce using rule 52 (expression -> expression RESTA term .)
    RESTA           reduce using rule 52 (expression -> expression RESTA term .)
    IGUAL           reduce using rule 52 (expression -> expression RESTA term .)
    MAYOR           reduce using rule 52 (expression -> expression RESTA term .)
    MENOR           reduce using rule 52 (expression -> expression RESTA term .)
    MAYOR_IGUAL     reduce using rule 52 (expression -> expression RESTA term .)
    MENOR_IGUAL     reduce using rule 52 (expression -> expression RESTA term .)
    and             reduce using rule 52 (expression -> expression RESTA term .)
    or              reduce using rule 52 (expression -> expression RESTA term .)
    RPAREN          reduce using rule 52 (expression -> expression RESTA term .)
    PROD            shift and go to state 111
    DIV             shift and go to state 112


state 134

    (56) term -> term PROD factor .

    PROD            reduce using rule 56 (term -> term PROD factor .)
    DIV             reduce using rule 56 (term -> term PROD factor .)
    SUM             reduce using rule 56 (term -> term PROD factor .)
    RESTA           reduce using rule 56 (term -> term PROD factor .)
    IGUAL           reduce using rule 56 (term -> term PROD factor .)
    MAYOR           reduce using rule 56 (term -> term PROD factor .)
    MENOR           reduce using rule 56 (term -> term PROD factor .)
    MAYOR_IGUAL     reduce using rule 56 (term -> term PROD factor .)
    MENOR_IGUAL     reduce using rule 56 (term -> term PROD factor .)
    and             reduce using rule 56 (term -> term PROD factor .)
    or              reduce using rule 56 (term -> term PROD factor .)
    RPAREN          reduce using rule 56 (term -> term PROD factor .)


state 135

    (57) term -> term DIV factor .

    PROD            reduce using rule 57 (term -> term DIV factor .)
    DIV             reduce using rule 57 (term -> term DIV factor .)
    SUM             reduce using rule 57 (term -> term DIV factor .)
    RESTA           reduce using rule 57 (term -> term DIV factor .)
    IGUAL           reduce using rule 57 (term -> term DIV factor .)
    MAYOR           reduce using rule 57 (term -> term DIV factor .)
    MENOR           reduce using rule 57 (term -> term DIV factor .)
    MAYOR_IGUAL     reduce using rule 57 (term -> term DIV factor .)
    MENOR_IGUAL     reduce using rule 57 (term -> term DIV factor .)
    and             reduce using rule 57 (term -> term DIV factor .)
    or              reduce using rule 57 (term -> term DIV factor .)
    RPAREN          reduce using rule 57 (term -> term DIV factor .)


state 136

    (29) while -> tk_while LPAREN condicion RPAREN LBRACE . codigo RBRACE SEMICOLON
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    codigo                         shift and go to state 145
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 137

    (49) esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .

    library         reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    IDENT           reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    var             reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    procedure       reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    PIN             reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    function        reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    tk_if           reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    tk_while        reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    foward          reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    backward        reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    left            reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    right           reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    wait            reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    stop            reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    end             reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    RBRACE          reduce using rule 49 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)


state 138

    (36) libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT . SINGLEDOT RPAREN SEMICOLON

    SINGLEDOT       shift and go to state 146


state 139

    (17) definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 147


state 140

    (34) argumento -> LPAREN IDENT VAR_ASSING . var_tipo RPAREN
    (13) var_tipo -> . INTEGER
    (14) var_tipo -> . STRING
    (15) var_tipo -> . FLOAT
    (16) var_tipo -> . BOOLEAN

    INTEGER         shift and go to state 53
    STRING          shift and go to state 54
    FLOAT           shift and go to state 55
    BOOLEAN         shift and go to state 56

    var_tipo                       shift and go to state 148

state 141

    (31) procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .

    library         reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    IDENT           reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    var             reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    procedure       reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    PIN             reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    function        reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    tk_if           reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    tk_while        reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    foward          reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    backward        reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    left            reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    right           reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    wait            reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    stop            reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    end             reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    RBRACE          reduce using rule 31 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)


state 142

    (32) pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 149


state 143

    (30) funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .

    library         reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    IDENT           reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    var             reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    procedure       reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    PIN             reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    function        reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    tk_if           reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    tk_while        reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    foward          reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    backward        reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    left            reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    right           reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    wait            reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    stop            reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    end             reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)
    RBRACE          reduce using rule 30 (funcion -> function var_tipo LPAREN argumento RPAREN SEMICOLON .)


state 144

    (26) if -> tk_if LPAREN condicion RPAREN LBRACE codigo . RBRACE SEMICOLON
    (27) ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo . RBRACE else

    RBRACE          shift and go to state 150


state 145

    (29) while -> tk_while LPAREN condicion RPAREN LBRACE codigo . RBRACE SEMICOLON

    RBRACE          shift and go to state 151


state 146

    (36) libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT . RPAREN SEMICOLON

    RPAREN          shift and go to state 152


state 147

    (17) definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .

    library         reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    IDENT           reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    var             reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    procedure       reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    PIN             reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    function        reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    tk_if           reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    tk_while        reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    foward          reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    backward        reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    left            reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    right           reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    wait            reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    stop            reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    end             reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)
    RBRACE          reduce using rule 17 (definicion -> var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON .)


state 148

    (34) argumento -> LPAREN IDENT VAR_ASSING var_tipo . RPAREN

    RPAREN          shift and go to state 153


state 149

    (32) pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .

    library         reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    IDENT           reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    var             reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    procedure       reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    PIN             reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    function        reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    tk_if           reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    tk_while        reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    foward          reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    backward        reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    left            reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    right           reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    wait            reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    stop            reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    end             reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)
    RBRACE          reduce using rule 32 (pin -> PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON .)


state 150

    (26) if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE . SEMICOLON
    (27) ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE . else
    (28) else -> . tk_else LBRACE codigo RBRACE SEMICOLON

    SEMICOLON       shift and go to state 154
    tk_else         shift and go to state 156

    else                           shift and go to state 155

state 151

    (29) while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 157


state 152

    (36) libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 158


state 153

    (34) argumento -> LPAREN IDENT VAR_ASSING var_tipo RPAREN .

    RPAREN          reduce using rule 34 (argumento -> LPAREN IDENT VAR_ASSING var_tipo RPAREN .)


state 154

    (26) if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .

    library         reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    IDENT           reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    var             reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    procedure       reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    PIN             reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    function        reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_if           reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_while        reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    foward          reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    backward        reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    left            reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    right           reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    wait            reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    stop            reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    end             reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    RBRACE          reduce using rule 26 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)


state 155

    (27) ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .

    library         reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    IDENT           reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    var             reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    procedure       reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    PIN             reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    function        reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    tk_if           reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    tk_while        reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    foward          reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    backward        reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    left            reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    right           reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    wait            reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    stop            reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    end             reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    RBRACE          reduce using rule 27 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)


state 156

    (28) else -> tk_else . LBRACE codigo RBRACE SEMICOLON

    LBRACE          shift and go to state 159


state 157

    (29) while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .

    library         reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    IDENT           reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    var             reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    procedure       reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    PIN             reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    function        reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_if           reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_while        reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    foward          reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    backward        reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    left            reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    right           reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    wait            reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    stop            reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    end             reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    RBRACE          reduce using rule 29 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)


state 158

    (36) libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .

    library         reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    IDENT           reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    var             reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    procedure       reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    PIN             reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    function        reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    tk_if           reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    tk_while        reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    foward          reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    backward        reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    left            reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    right           reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    wait            reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    stop            reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    end             reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)
    RBRACE          reduce using rule 36 (libreria -> library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON .)


state 159

    (28) else -> tk_else LBRACE . codigo RBRACE SEMICOLON
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria sentencia
    (5) sentencia -> . variable sentencia
    (6) sentencia -> . control sentencia
    (7) sentencia -> . definicion sentencia
    (8) sentencia -> . procedimiento sentencia
    (9) sentencia -> . pin sentencia
    (10) sentencia -> . funcion sentencia
    (11) sentencia -> . loop sentencia
    (12) sentencia -> . empty
    (36) libreria -> . library LPAREN SINGLEDOT IDENT PUNTO IDENT SINGLEDOT RPAREN SEMICOLON
    (37) libreria -> . empty
    (21) variable -> . IDENT ASSING ENTERO SEMICOLON variable
    (22) variable -> . IDENT ASSING ENTERO SEMICOLON
    (23) control -> . if
    (24) control -> . ifelse
    (25) control -> . while
    (17) definicion -> . var LPAREN IDENT VAR_ASSING INTEGER RPAREN SEMICOLON
    (31) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (32) pin -> . PIN LPAREN IDENT VAR_ASSING PINTYPE RPAREN SEMICOLON
    (30) funcion -> . function var_tipo LPAREN argumento RPAREN SEMICOLON
    (38) loop -> . adelante
    (39) loop -> . atras
    (40) loop -> . izquierda
    (41) loop -> . derecha
    (42) loop -> . esperar
    (43) loop -> . parar
    (44) loop -> . empty
    (71) empty -> .
    (26) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (27) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (29) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (45) adelante -> . foward LPAREN RPAREN SEMICOLON
    (46) atras -> . backward LPAREN RPAREN SEMICOLON
    (47) izquierda -> . left LPAREN RPAREN SEMICOLON
    (48) derecha -> . right LPAREN RPAREN SEMICOLON
    (49) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (50) parar -> . stop LPAREN RPAREN SEMICOLON

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for PIN resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 14
    IDENT           shift and go to state 15
    var             shift and go to state 19
    procedure       shift and go to state 20
    PIN             shift and go to state 21
    function        shift and go to state 22
    RBRACE          reduce using rule 71 (empty -> .)
    tk_if           shift and go to state 29
    tk_while        shift and go to state 30
    foward          shift and go to state 31
    backward        shift and go to state 32
    left            shift and go to state 33
    right           shift and go to state 34
    wait            shift and go to state 35
    stop            shift and go to state 36

  ! library         [ reduce using rule 71 (empty -> .) ]
  ! IDENT           [ reduce using rule 71 (empty -> .) ]
  ! var             [ reduce using rule 71 (empty -> .) ]
  ! procedure       [ reduce using rule 71 (empty -> .) ]
  ! PIN             [ reduce using rule 71 (empty -> .) ]
  ! function        [ reduce using rule 71 (empty -> .) ]
  ! tk_if           [ reduce using rule 71 (empty -> .) ]
  ! tk_while        [ reduce using rule 71 (empty -> .) ]
  ! foward          [ reduce using rule 71 (empty -> .) ]
  ! backward        [ reduce using rule 71 (empty -> .) ]
  ! left            [ reduce using rule 71 (empty -> .) ]
  ! right           [ reduce using rule 71 (empty -> .) ]
  ! wait            [ reduce using rule 71 (empty -> .) ]
  ! stop            [ reduce using rule 71 (empty -> .) ]

    codigo                         shift and go to state 160
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    pin                            shift and go to state 10
    funcion                        shift and go to state 11
    loop                           shift and go to state 12
    empty                          shift and go to state 13
    if                             shift and go to state 16
    ifelse                         shift and go to state 17
    while                          shift and go to state 18
    adelante                       shift and go to state 23
    atras                          shift and go to state 24
    izquierda                      shift and go to state 25
    derecha                        shift and go to state 26
    esperar                        shift and go to state 27
    parar                          shift and go to state 28

state 160

    (28) else -> tk_else LBRACE codigo . RBRACE SEMICOLON

    RBRACE          shift and go to state 161


state 161

    (28) else -> tk_else LBRACE codigo RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 162


state 162

    (28) else -> tk_else LBRACE codigo RBRACE SEMICOLON .

    library         reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    IDENT           reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    var             reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    procedure       reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    PIN             reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    function        reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    tk_if           reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    tk_while        reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    foward          reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    backward        reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    left            reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    right           reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    wait            reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    stop            reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    end             reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    RBRACE          reduce using rule 28 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for library in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 2 resolved as shift
WARNING: shift/reduce conflict for procedure in state 2 resolved as shift
WARNING: shift/reduce conflict for PIN in state 2 resolved as shift
WARNING: shift/reduce conflict for function in state 2 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 2 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 2 resolved as shift
WARNING: shift/reduce conflict for foward in state 2 resolved as shift
WARNING: shift/reduce conflict for backward in state 2 resolved as shift
WARNING: shift/reduce conflict for left in state 2 resolved as shift
WARNING: shift/reduce conflict for right in state 2 resolved as shift
WARNING: shift/reduce conflict for wait in state 2 resolved as shift
WARNING: shift/reduce conflict for stop in state 2 resolved as shift
WARNING: shift/reduce conflict for library in state 4 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 4 resolved as shift
WARNING: shift/reduce conflict for var in state 4 resolved as shift
WARNING: shift/reduce conflict for procedure in state 4 resolved as shift
WARNING: shift/reduce conflict for PIN in state 4 resolved as shift
WARNING: shift/reduce conflict for function in state 4 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 4 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 4 resolved as shift
WARNING: shift/reduce conflict for foward in state 4 resolved as shift
WARNING: shift/reduce conflict for backward in state 4 resolved as shift
WARNING: shift/reduce conflict for left in state 4 resolved as shift
WARNING: shift/reduce conflict for right in state 4 resolved as shift
WARNING: shift/reduce conflict for wait in state 4 resolved as shift
WARNING: shift/reduce conflict for stop in state 4 resolved as shift
WARNING: shift/reduce conflict for library in state 5 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 5 resolved as shift
WARNING: shift/reduce conflict for var in state 5 resolved as shift
WARNING: shift/reduce conflict for procedure in state 5 resolved as shift
WARNING: shift/reduce conflict for PIN in state 5 resolved as shift
WARNING: shift/reduce conflict for function in state 5 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 5 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 5 resolved as shift
WARNING: shift/reduce conflict for foward in state 5 resolved as shift
WARNING: shift/reduce conflict for backward in state 5 resolved as shift
WARNING: shift/reduce conflict for left in state 5 resolved as shift
WARNING: shift/reduce conflict for right in state 5 resolved as shift
WARNING: shift/reduce conflict for wait in state 5 resolved as shift
WARNING: shift/reduce conflict for stop in state 5 resolved as shift
WARNING: shift/reduce conflict for library in state 6 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 6 resolved as shift
WARNING: shift/reduce conflict for var in state 6 resolved as shift
WARNING: shift/reduce conflict for procedure in state 6 resolved as shift
WARNING: shift/reduce conflict for PIN in state 6 resolved as shift
WARNING: shift/reduce conflict for function in state 6 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 6 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 6 resolved as shift
WARNING: shift/reduce conflict for foward in state 6 resolved as shift
WARNING: shift/reduce conflict for backward in state 6 resolved as shift
WARNING: shift/reduce conflict for left in state 6 resolved as shift
WARNING: shift/reduce conflict for right in state 6 resolved as shift
WARNING: shift/reduce conflict for wait in state 6 resolved as shift
WARNING: shift/reduce conflict for stop in state 6 resolved as shift
WARNING: shift/reduce conflict for library in state 7 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 7 resolved as shift
WARNING: shift/reduce conflict for var in state 7 resolved as shift
WARNING: shift/reduce conflict for procedure in state 7 resolved as shift
WARNING: shift/reduce conflict for PIN in state 7 resolved as shift
WARNING: shift/reduce conflict for function in state 7 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 7 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 7 resolved as shift
WARNING: shift/reduce conflict for foward in state 7 resolved as shift
WARNING: shift/reduce conflict for backward in state 7 resolved as shift
WARNING: shift/reduce conflict for left in state 7 resolved as shift
WARNING: shift/reduce conflict for right in state 7 resolved as shift
WARNING: shift/reduce conflict for wait in state 7 resolved as shift
WARNING: shift/reduce conflict for stop in state 7 resolved as shift
WARNING: shift/reduce conflict for library in state 8 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 8 resolved as shift
WARNING: shift/reduce conflict for var in state 8 resolved as shift
WARNING: shift/reduce conflict for procedure in state 8 resolved as shift
WARNING: shift/reduce conflict for PIN in state 8 resolved as shift
WARNING: shift/reduce conflict for function in state 8 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 8 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 8 resolved as shift
WARNING: shift/reduce conflict for foward in state 8 resolved as shift
WARNING: shift/reduce conflict for backward in state 8 resolved as shift
WARNING: shift/reduce conflict for left in state 8 resolved as shift
WARNING: shift/reduce conflict for right in state 8 resolved as shift
WARNING: shift/reduce conflict for wait in state 8 resolved as shift
WARNING: shift/reduce conflict for stop in state 8 resolved as shift
WARNING: shift/reduce conflict for library in state 9 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 9 resolved as shift
WARNING: shift/reduce conflict for var in state 9 resolved as shift
WARNING: shift/reduce conflict for procedure in state 9 resolved as shift
WARNING: shift/reduce conflict for PIN in state 9 resolved as shift
WARNING: shift/reduce conflict for function in state 9 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 9 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 9 resolved as shift
WARNING: shift/reduce conflict for foward in state 9 resolved as shift
WARNING: shift/reduce conflict for backward in state 9 resolved as shift
WARNING: shift/reduce conflict for left in state 9 resolved as shift
WARNING: shift/reduce conflict for right in state 9 resolved as shift
WARNING: shift/reduce conflict for wait in state 9 resolved as shift
WARNING: shift/reduce conflict for stop in state 9 resolved as shift
WARNING: shift/reduce conflict for library in state 10 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 10 resolved as shift
WARNING: shift/reduce conflict for var in state 10 resolved as shift
WARNING: shift/reduce conflict for procedure in state 10 resolved as shift
WARNING: shift/reduce conflict for PIN in state 10 resolved as shift
WARNING: shift/reduce conflict for function in state 10 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 10 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 10 resolved as shift
WARNING: shift/reduce conflict for foward in state 10 resolved as shift
WARNING: shift/reduce conflict for backward in state 10 resolved as shift
WARNING: shift/reduce conflict for left in state 10 resolved as shift
WARNING: shift/reduce conflict for right in state 10 resolved as shift
WARNING: shift/reduce conflict for wait in state 10 resolved as shift
WARNING: shift/reduce conflict for stop in state 10 resolved as shift
WARNING: shift/reduce conflict for library in state 11 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 11 resolved as shift
WARNING: shift/reduce conflict for var in state 11 resolved as shift
WARNING: shift/reduce conflict for procedure in state 11 resolved as shift
WARNING: shift/reduce conflict for PIN in state 11 resolved as shift
WARNING: shift/reduce conflict for function in state 11 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 11 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 11 resolved as shift
WARNING: shift/reduce conflict for foward in state 11 resolved as shift
WARNING: shift/reduce conflict for backward in state 11 resolved as shift
WARNING: shift/reduce conflict for left in state 11 resolved as shift
WARNING: shift/reduce conflict for right in state 11 resolved as shift
WARNING: shift/reduce conflict for wait in state 11 resolved as shift
WARNING: shift/reduce conflict for stop in state 11 resolved as shift
WARNING: shift/reduce conflict for library in state 12 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 12 resolved as shift
WARNING: shift/reduce conflict for var in state 12 resolved as shift
WARNING: shift/reduce conflict for procedure in state 12 resolved as shift
WARNING: shift/reduce conflict for PIN in state 12 resolved as shift
WARNING: shift/reduce conflict for function in state 12 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 12 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 12 resolved as shift
WARNING: shift/reduce conflict for foward in state 12 resolved as shift
WARNING: shift/reduce conflict for backward in state 12 resolved as shift
WARNING: shift/reduce conflict for left in state 12 resolved as shift
WARNING: shift/reduce conflict for right in state 12 resolved as shift
WARNING: shift/reduce conflict for wait in state 12 resolved as shift
WARNING: shift/reduce conflict for stop in state 12 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 90 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 93 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 96 resolved as shift
WARNING: shift/reduce conflict for library in state 128 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 128 resolved as shift
WARNING: shift/reduce conflict for var in state 128 resolved as shift
WARNING: shift/reduce conflict for procedure in state 128 resolved as shift
WARNING: shift/reduce conflict for PIN in state 128 resolved as shift
WARNING: shift/reduce conflict for function in state 128 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 128 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 128 resolved as shift
WARNING: shift/reduce conflict for foward in state 128 resolved as shift
WARNING: shift/reduce conflict for backward in state 128 resolved as shift
WARNING: shift/reduce conflict for left in state 128 resolved as shift
WARNING: shift/reduce conflict for right in state 128 resolved as shift
WARNING: shift/reduce conflict for wait in state 128 resolved as shift
WARNING: shift/reduce conflict for stop in state 128 resolved as shift
WARNING: shift/reduce conflict for library in state 136 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 136 resolved as shift
WARNING: shift/reduce conflict for var in state 136 resolved as shift
WARNING: shift/reduce conflict for procedure in state 136 resolved as shift
WARNING: shift/reduce conflict for PIN in state 136 resolved as shift
WARNING: shift/reduce conflict for function in state 136 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 136 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 136 resolved as shift
WARNING: shift/reduce conflict for foward in state 136 resolved as shift
WARNING: shift/reduce conflict for backward in state 136 resolved as shift
WARNING: shift/reduce conflict for left in state 136 resolved as shift
WARNING: shift/reduce conflict for right in state 136 resolved as shift
WARNING: shift/reduce conflict for wait in state 136 resolved as shift
WARNING: shift/reduce conflict for stop in state 136 resolved as shift
WARNING: shift/reduce conflict for library in state 159 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 159 resolved as shift
WARNING: shift/reduce conflict for var in state 159 resolved as shift
WARNING: shift/reduce conflict for procedure in state 159 resolved as shift
WARNING: shift/reduce conflict for PIN in state 159 resolved as shift
WARNING: shift/reduce conflict for function in state 159 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 159 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 159 resolved as shift
WARNING: shift/reduce conflict for foward in state 159 resolved as shift
WARNING: shift/reduce conflict for backward in state 159 resolved as shift
WARNING: shift/reduce conflict for left in state 159 resolved as shift
WARNING: shift/reduce conflict for right in state 159 resolved as shift
WARNING: shift/reduce conflict for wait in state 159 resolved as shift
WARNING: shift/reduce conflict for stop in state 159 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (codigo -> sentencia)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 13 resolved using rule (sentencia -> empty)
WARNING: rejected rule (libreria -> empty) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (sentencia -> empty)
WARNING: rejected rule (loop -> empty) in state 13
WARNING: reduce/reduce conflict in state 79 resolved using rule (tipo -> ENTERO)
WARNING: rejected rule (factor -> ENTERO) in state 79
WARNING: Rule (libreria -> empty) is never reduced
WARNING: Rule (loop -> empty) is never reduced
