Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    COMMENT
    DOUBLEDOT
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> beginend
Rule 1     beginend -> begin codigo end
Rule 2     codigo -> sentencia
Rule 3     codigo -> sentencia codigo
Rule 4     sentencia -> libreria
Rule 5     sentencia -> variable
Rule 6     sentencia -> control
Rule 7     sentencia -> definicion
Rule 8     sentencia -> procedimiento
Rule 9     sentencia -> funcion
Rule 10    sentencia -> loop
Rule 11    definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON
Rule 12    variable -> IDENT ASSING tipo SEMICOLON
Rule 13    tipo -> TEXTO
Rule 14    tipo -> ENTERO
Rule 15    tipo -> DECIMAL
Rule 16    tipo -> LOGICO
Rule 17    control -> if
Rule 18    control -> ifelse
Rule 19    control -> while
Rule 20    if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
Rule 21    ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
Rule 22    else -> tk_else LBRACE codigo RBRACE SEMICOLON
Rule 23    while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
Rule 24    funcion -> function tipo LPAREN argumento RPAREN SEMICOLON
Rule 25    procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON
Rule 26    pin -> PIN LPAREN ENTERO SPACE conector RPAREN SEMICOLON
Rule 27    conector -> IN
Rule 28    conector -> OUT
Rule 29    argumento -> argumento
Rule 30    argumento -> LPAREN IDENT VAR_ASSING tipo RPAREN
Rule 31    argumento -> empty
Rule 32    libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON
Rule 33    loop -> adelante
Rule 34    loop -> atras
Rule 35    loop -> izquierda
Rule 36    loop -> derecha
Rule 37    loop -> esperar
Rule 38    loop -> parar
Rule 39    loop -> empty
Rule 40    adelante -> foward LPAREN RPAREN SEMICOLON
Rule 41    atras -> backward LPAREN RPAREN SEMICOLON
Rule 42    izquierda -> left LPAREN RPAREN SEMICOLON
Rule 43    derecha -> right LPAREN RPAREN SEMICOLON
Rule 44    esperar -> wait LPAREN ENTERO RPAREN SEMICOLON
Rule 45    parar -> stop LPAREN RPAREN SEMICOLON
Rule 46    expression -> expression SUM term
Rule 47    expression -> expression RESTA term
Rule 48    expression -> term
Rule 49    expression -> tipo
Rule 50    expression -> variable
Rule 51    term -> term PROD factor
Rule 52    term -> term DIV factor
Rule 53    term -> factor
Rule 54    factor -> ENTERO
Rule 55    factor -> LPAREN expression RPAREN
Rule 56    condicion -> expression relacion expression
Rule 57    condicion -> NOT expression
Rule 58    condicion -> expression logico expression
Rule 59    relacion -> IGUAL
Rule 60    relacion -> MAYOR
Rule 61    relacion -> MENOR
Rule 62    relacion -> MAYOR_IGUAL
Rule 63    relacion -> MENOR_IGUAL
Rule 64    logico -> and
Rule 65    logico -> or
Rule 66    empty -> <empty>

Terminals, with rules where they appear

ASSING               : 12
COMMA                : 
COMMENT              : 
DECIMAL              : 15
DIV                  : 52
DOUBLEDOT            : 
ENTERO               : 14 26 44 54
IDENT                : 11 12 25 30
IGUAL                : 59
IN                   : 27
LBRACE               : 20 21 22 23
LBRACKET             : 
LOGICO               : 16
LPAREN               : 11 20 21 23 24 25 26 30 32 40 41 42 43 44 45 55
MAYOR                : 60
MAYOR_IGUAL          : 62
MENOR                : 61
MENOR_IGUAL          : 63
NOT                  : 57
OUT                  : 28
PIN                  : 26
PROD                 : 51
PUNTO                : 32
RBRACE               : 20 21 22 23
RBRACKET             : 
RESTA                : 47
RPAREN               : 11 20 21 23 24 25 26 30 32 40 41 42 43 44 45 55
SEMICOLON            : 11 12 20 22 23 24 25 26 32 40 41 42 43 44 45
SINGLEDOT            : 32 32
SPACE                : 26
SUM                  : 46
TEXTO                : 13 32 32
VAR_ASSING           : 11 30
and                  : 64
backward             : 41
begin                : 1
end                  : 1
error                : 
foward               : 40
function             : 24
left                 : 42
library              : 32
or                   : 65
procedure            : 25
right                : 43
stop                 : 45
tk_else              : 22
tk_if                : 20 21
tk_while             : 23
var                  : 11
wait                 : 44

Nonterminals, with rules where they appear

adelante             : 33
argumento            : 24 25 29
atras                : 34
beginend             : 0
codigo               : 1 3 20 21 22 23
condicion            : 20 21 23
conector             : 26
control              : 6
definicion           : 7
derecha              : 36
else                 : 21
empty                : 31 39
esperar              : 37
expression           : 46 47 55 56 56 57 58 58
factor               : 51 52 53
funcion              : 9
if                   : 17
ifelse               : 18
izquierda            : 35
libreria             : 4
logico               : 58
loop                 : 10
parar                : 38
pin                  : 
procedimiento        : 8
relacion             : 56
sentencia            : 2 3
term                 : 46 47 48 51 52
tipo                 : 11 12 24 30 49
variable             : 5 50
while                : 19

Parsing method: LALR

state 0

    (0) S' -> . beginend
    (1) beginend -> . begin codigo end

    begin           shift and go to state 2

    beginend                       shift and go to state 1

state 1

    (0) S' -> beginend .



state 2

    (1) beginend -> begin . codigo end
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria
    (5) sentencia -> . variable
    (6) sentencia -> . control
    (7) sentencia -> . definicion
    (8) sentencia -> . procedimiento
    (9) sentencia -> . funcion
    (10) sentencia -> . loop
    (32) libreria -> . library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (17) control -> . if
    (18) control -> . ifelse
    (19) control -> . while
    (11) definicion -> . var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON
    (25) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (24) funcion -> . function tipo LPAREN argumento RPAREN SEMICOLON
    (33) loop -> . adelante
    (34) loop -> . atras
    (35) loop -> . izquierda
    (36) loop -> . derecha
    (37) loop -> . esperar
    (38) loop -> . parar
    (39) loop -> . empty
    (20) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (23) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (40) adelante -> . foward LPAREN RPAREN SEMICOLON
    (41) atras -> . backward LPAREN RPAREN SEMICOLON
    (42) izquierda -> . left LPAREN RPAREN SEMICOLON
    (43) derecha -> . right LPAREN RPAREN SEMICOLON
    (44) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (45) parar -> . stop LPAREN RPAREN SEMICOLON
    (66) empty -> .

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 12
    IDENT           shift and go to state 13
    var             shift and go to state 17
    procedure       shift and go to state 18
    function        shift and go to state 19
    tk_if           shift and go to state 27
    tk_while        shift and go to state 28
    foward          shift and go to state 29
    backward        shift and go to state 30
    left            shift and go to state 31
    right           shift and go to state 32
    wait            shift and go to state 33
    stop            shift and go to state 34
    end             reduce using rule 66 (empty -> .)

  ! library         [ reduce using rule 66 (empty -> .) ]
  ! IDENT           [ reduce using rule 66 (empty -> .) ]
  ! var             [ reduce using rule 66 (empty -> .) ]
  ! procedure       [ reduce using rule 66 (empty -> .) ]
  ! function        [ reduce using rule 66 (empty -> .) ]
  ! tk_if           [ reduce using rule 66 (empty -> .) ]
  ! tk_while        [ reduce using rule 66 (empty -> .) ]
  ! foward          [ reduce using rule 66 (empty -> .) ]
  ! backward        [ reduce using rule 66 (empty -> .) ]
  ! left            [ reduce using rule 66 (empty -> .) ]
  ! right           [ reduce using rule 66 (empty -> .) ]
  ! wait            [ reduce using rule 66 (empty -> .) ]
  ! stop            [ reduce using rule 66 (empty -> .) ]

    codigo                         shift and go to state 3
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    funcion                        shift and go to state 10
    loop                           shift and go to state 11
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    while                          shift and go to state 16
    adelante                       shift and go to state 20
    atras                          shift and go to state 21
    izquierda                      shift and go to state 22
    derecha                        shift and go to state 23
    esperar                        shift and go to state 24
    parar                          shift and go to state 25
    empty                          shift and go to state 26

state 3

    (1) beginend -> begin codigo . end

    end             shift and go to state 35


state 4

    (2) codigo -> sentencia .
    (3) codigo -> sentencia . codigo
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria
    (5) sentencia -> . variable
    (6) sentencia -> . control
    (7) sentencia -> . definicion
    (8) sentencia -> . procedimiento
    (9) sentencia -> . funcion
    (10) sentencia -> . loop
    (32) libreria -> . library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (17) control -> . if
    (18) control -> . ifelse
    (19) control -> . while
    (11) definicion -> . var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON
    (25) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (24) funcion -> . function tipo LPAREN argumento RPAREN SEMICOLON
    (33) loop -> . adelante
    (34) loop -> . atras
    (35) loop -> . izquierda
    (36) loop -> . derecha
    (37) loop -> . esperar
    (38) loop -> . parar
    (39) loop -> . empty
    (20) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (23) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (40) adelante -> . foward LPAREN RPAREN SEMICOLON
    (41) atras -> . backward LPAREN RPAREN SEMICOLON
    (42) izquierda -> . left LPAREN RPAREN SEMICOLON
    (43) derecha -> . right LPAREN RPAREN SEMICOLON
    (44) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (45) parar -> . stop LPAREN RPAREN SEMICOLON
    (66) empty -> .

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
  ! reduce/reduce conflict for end resolved using rule 2 (codigo -> sentencia .)
  ! reduce/reduce conflict for RBRACE resolved using rule 2 (codigo -> sentencia .)
    end             reduce using rule 2 (codigo -> sentencia .)
    RBRACE          reduce using rule 2 (codigo -> sentencia .)
    library         shift and go to state 12
    IDENT           shift and go to state 13
    var             shift and go to state 17
    procedure       shift and go to state 18
    function        shift and go to state 19
    tk_if           shift and go to state 27
    tk_while        shift and go to state 28
    foward          shift and go to state 29
    backward        shift and go to state 30
    left            shift and go to state 31
    right           shift and go to state 32
    wait            shift and go to state 33
    stop            shift and go to state 34

  ! library         [ reduce using rule 66 (empty -> .) ]
  ! IDENT           [ reduce using rule 66 (empty -> .) ]
  ! var             [ reduce using rule 66 (empty -> .) ]
  ! procedure       [ reduce using rule 66 (empty -> .) ]
  ! function        [ reduce using rule 66 (empty -> .) ]
  ! tk_if           [ reduce using rule 66 (empty -> .) ]
  ! tk_while        [ reduce using rule 66 (empty -> .) ]
  ! foward          [ reduce using rule 66 (empty -> .) ]
  ! backward        [ reduce using rule 66 (empty -> .) ]
  ! left            [ reduce using rule 66 (empty -> .) ]
  ! right           [ reduce using rule 66 (empty -> .) ]
  ! wait            [ reduce using rule 66 (empty -> .) ]
  ! stop            [ reduce using rule 66 (empty -> .) ]
  ! end             [ reduce using rule 66 (empty -> .) ]
  ! RBRACE          [ reduce using rule 66 (empty -> .) ]

    sentencia                      shift and go to state 4
    codigo                         shift and go to state 36
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    funcion                        shift and go to state 10
    loop                           shift and go to state 11
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    while                          shift and go to state 16
    adelante                       shift and go to state 20
    atras                          shift and go to state 21
    izquierda                      shift and go to state 22
    derecha                        shift and go to state 23
    esperar                        shift and go to state 24
    parar                          shift and go to state 25
    empty                          shift and go to state 26

state 5

    (4) sentencia -> libreria .

    library         reduce using rule 4 (sentencia -> libreria .)
    IDENT           reduce using rule 4 (sentencia -> libreria .)
    var             reduce using rule 4 (sentencia -> libreria .)
    procedure       reduce using rule 4 (sentencia -> libreria .)
    function        reduce using rule 4 (sentencia -> libreria .)
    tk_if           reduce using rule 4 (sentencia -> libreria .)
    tk_while        reduce using rule 4 (sentencia -> libreria .)
    foward          reduce using rule 4 (sentencia -> libreria .)
    backward        reduce using rule 4 (sentencia -> libreria .)
    left            reduce using rule 4 (sentencia -> libreria .)
    right           reduce using rule 4 (sentencia -> libreria .)
    wait            reduce using rule 4 (sentencia -> libreria .)
    stop            reduce using rule 4 (sentencia -> libreria .)
    end             reduce using rule 4 (sentencia -> libreria .)
    RBRACE          reduce using rule 4 (sentencia -> libreria .)


state 6

    (5) sentencia -> variable .

    library         reduce using rule 5 (sentencia -> variable .)
    IDENT           reduce using rule 5 (sentencia -> variable .)
    var             reduce using rule 5 (sentencia -> variable .)
    procedure       reduce using rule 5 (sentencia -> variable .)
    function        reduce using rule 5 (sentencia -> variable .)
    tk_if           reduce using rule 5 (sentencia -> variable .)
    tk_while        reduce using rule 5 (sentencia -> variable .)
    foward          reduce using rule 5 (sentencia -> variable .)
    backward        reduce using rule 5 (sentencia -> variable .)
    left            reduce using rule 5 (sentencia -> variable .)
    right           reduce using rule 5 (sentencia -> variable .)
    wait            reduce using rule 5 (sentencia -> variable .)
    stop            reduce using rule 5 (sentencia -> variable .)
    end             reduce using rule 5 (sentencia -> variable .)
    RBRACE          reduce using rule 5 (sentencia -> variable .)


state 7

    (6) sentencia -> control .

    library         reduce using rule 6 (sentencia -> control .)
    IDENT           reduce using rule 6 (sentencia -> control .)
    var             reduce using rule 6 (sentencia -> control .)
    procedure       reduce using rule 6 (sentencia -> control .)
    function        reduce using rule 6 (sentencia -> control .)
    tk_if           reduce using rule 6 (sentencia -> control .)
    tk_while        reduce using rule 6 (sentencia -> control .)
    foward          reduce using rule 6 (sentencia -> control .)
    backward        reduce using rule 6 (sentencia -> control .)
    left            reduce using rule 6 (sentencia -> control .)
    right           reduce using rule 6 (sentencia -> control .)
    wait            reduce using rule 6 (sentencia -> control .)
    stop            reduce using rule 6 (sentencia -> control .)
    end             reduce using rule 6 (sentencia -> control .)
    RBRACE          reduce using rule 6 (sentencia -> control .)


state 8

    (7) sentencia -> definicion .

    library         reduce using rule 7 (sentencia -> definicion .)
    IDENT           reduce using rule 7 (sentencia -> definicion .)
    var             reduce using rule 7 (sentencia -> definicion .)
    procedure       reduce using rule 7 (sentencia -> definicion .)
    function        reduce using rule 7 (sentencia -> definicion .)
    tk_if           reduce using rule 7 (sentencia -> definicion .)
    tk_while        reduce using rule 7 (sentencia -> definicion .)
    foward          reduce using rule 7 (sentencia -> definicion .)
    backward        reduce using rule 7 (sentencia -> definicion .)
    left            reduce using rule 7 (sentencia -> definicion .)
    right           reduce using rule 7 (sentencia -> definicion .)
    wait            reduce using rule 7 (sentencia -> definicion .)
    stop            reduce using rule 7 (sentencia -> definicion .)
    end             reduce using rule 7 (sentencia -> definicion .)
    RBRACE          reduce using rule 7 (sentencia -> definicion .)


state 9

    (8) sentencia -> procedimiento .

    library         reduce using rule 8 (sentencia -> procedimiento .)
    IDENT           reduce using rule 8 (sentencia -> procedimiento .)
    var             reduce using rule 8 (sentencia -> procedimiento .)
    procedure       reduce using rule 8 (sentencia -> procedimiento .)
    function        reduce using rule 8 (sentencia -> procedimiento .)
    tk_if           reduce using rule 8 (sentencia -> procedimiento .)
    tk_while        reduce using rule 8 (sentencia -> procedimiento .)
    foward          reduce using rule 8 (sentencia -> procedimiento .)
    backward        reduce using rule 8 (sentencia -> procedimiento .)
    left            reduce using rule 8 (sentencia -> procedimiento .)
    right           reduce using rule 8 (sentencia -> procedimiento .)
    wait            reduce using rule 8 (sentencia -> procedimiento .)
    stop            reduce using rule 8 (sentencia -> procedimiento .)
    end             reduce using rule 8 (sentencia -> procedimiento .)
    RBRACE          reduce using rule 8 (sentencia -> procedimiento .)


state 10

    (9) sentencia -> funcion .

    library         reduce using rule 9 (sentencia -> funcion .)
    IDENT           reduce using rule 9 (sentencia -> funcion .)
    var             reduce using rule 9 (sentencia -> funcion .)
    procedure       reduce using rule 9 (sentencia -> funcion .)
    function        reduce using rule 9 (sentencia -> funcion .)
    tk_if           reduce using rule 9 (sentencia -> funcion .)
    tk_while        reduce using rule 9 (sentencia -> funcion .)
    foward          reduce using rule 9 (sentencia -> funcion .)
    backward        reduce using rule 9 (sentencia -> funcion .)
    left            reduce using rule 9 (sentencia -> funcion .)
    right           reduce using rule 9 (sentencia -> funcion .)
    wait            reduce using rule 9 (sentencia -> funcion .)
    stop            reduce using rule 9 (sentencia -> funcion .)
    end             reduce using rule 9 (sentencia -> funcion .)
    RBRACE          reduce using rule 9 (sentencia -> funcion .)


state 11

    (10) sentencia -> loop .

    library         reduce using rule 10 (sentencia -> loop .)
    IDENT           reduce using rule 10 (sentencia -> loop .)
    var             reduce using rule 10 (sentencia -> loop .)
    procedure       reduce using rule 10 (sentencia -> loop .)
    function        reduce using rule 10 (sentencia -> loop .)
    tk_if           reduce using rule 10 (sentencia -> loop .)
    tk_while        reduce using rule 10 (sentencia -> loop .)
    foward          reduce using rule 10 (sentencia -> loop .)
    backward        reduce using rule 10 (sentencia -> loop .)
    left            reduce using rule 10 (sentencia -> loop .)
    right           reduce using rule 10 (sentencia -> loop .)
    wait            reduce using rule 10 (sentencia -> loop .)
    stop            reduce using rule 10 (sentencia -> loop .)
    end             reduce using rule 10 (sentencia -> loop .)
    RBRACE          reduce using rule 10 (sentencia -> loop .)


state 12

    (32) libreria -> library . LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON

    LPAREN          shift and go to state 37


state 13

    (12) variable -> IDENT . ASSING tipo SEMICOLON

    ASSING          shift and go to state 38


state 14

    (17) control -> if .

    library         reduce using rule 17 (control -> if .)
    IDENT           reduce using rule 17 (control -> if .)
    var             reduce using rule 17 (control -> if .)
    procedure       reduce using rule 17 (control -> if .)
    function        reduce using rule 17 (control -> if .)
    tk_if           reduce using rule 17 (control -> if .)
    tk_while        reduce using rule 17 (control -> if .)
    foward          reduce using rule 17 (control -> if .)
    backward        reduce using rule 17 (control -> if .)
    left            reduce using rule 17 (control -> if .)
    right           reduce using rule 17 (control -> if .)
    wait            reduce using rule 17 (control -> if .)
    stop            reduce using rule 17 (control -> if .)
    end             reduce using rule 17 (control -> if .)
    RBRACE          reduce using rule 17 (control -> if .)


state 15

    (18) control -> ifelse .

    library         reduce using rule 18 (control -> ifelse .)
    IDENT           reduce using rule 18 (control -> ifelse .)
    var             reduce using rule 18 (control -> ifelse .)
    procedure       reduce using rule 18 (control -> ifelse .)
    function        reduce using rule 18 (control -> ifelse .)
    tk_if           reduce using rule 18 (control -> ifelse .)
    tk_while        reduce using rule 18 (control -> ifelse .)
    foward          reduce using rule 18 (control -> ifelse .)
    backward        reduce using rule 18 (control -> ifelse .)
    left            reduce using rule 18 (control -> ifelse .)
    right           reduce using rule 18 (control -> ifelse .)
    wait            reduce using rule 18 (control -> ifelse .)
    stop            reduce using rule 18 (control -> ifelse .)
    end             reduce using rule 18 (control -> ifelse .)
    RBRACE          reduce using rule 18 (control -> ifelse .)


state 16

    (19) control -> while .

    library         reduce using rule 19 (control -> while .)
    IDENT           reduce using rule 19 (control -> while .)
    var             reduce using rule 19 (control -> while .)
    procedure       reduce using rule 19 (control -> while .)
    function        reduce using rule 19 (control -> while .)
    tk_if           reduce using rule 19 (control -> while .)
    tk_while        reduce using rule 19 (control -> while .)
    foward          reduce using rule 19 (control -> while .)
    backward        reduce using rule 19 (control -> while .)
    left            reduce using rule 19 (control -> while .)
    right           reduce using rule 19 (control -> while .)
    wait            reduce using rule 19 (control -> while .)
    stop            reduce using rule 19 (control -> while .)
    end             reduce using rule 19 (control -> while .)
    RBRACE          reduce using rule 19 (control -> while .)


state 17

    (11) definicion -> var . LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON

    LPAREN          shift and go to state 39


state 18

    (25) procedimiento -> procedure . IDENT LPAREN argumento RPAREN SEMICOLON

    IDENT           shift and go to state 40


state 19

    (24) funcion -> function . tipo LPAREN argumento RPAREN SEMICOLON
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45

    tipo                           shift and go to state 41

state 20

    (33) loop -> adelante .

    library         reduce using rule 33 (loop -> adelante .)
    IDENT           reduce using rule 33 (loop -> adelante .)
    var             reduce using rule 33 (loop -> adelante .)
    procedure       reduce using rule 33 (loop -> adelante .)
    function        reduce using rule 33 (loop -> adelante .)
    tk_if           reduce using rule 33 (loop -> adelante .)
    tk_while        reduce using rule 33 (loop -> adelante .)
    foward          reduce using rule 33 (loop -> adelante .)
    backward        reduce using rule 33 (loop -> adelante .)
    left            reduce using rule 33 (loop -> adelante .)
    right           reduce using rule 33 (loop -> adelante .)
    wait            reduce using rule 33 (loop -> adelante .)
    stop            reduce using rule 33 (loop -> adelante .)
    end             reduce using rule 33 (loop -> adelante .)
    RBRACE          reduce using rule 33 (loop -> adelante .)


state 21

    (34) loop -> atras .

    library         reduce using rule 34 (loop -> atras .)
    IDENT           reduce using rule 34 (loop -> atras .)
    var             reduce using rule 34 (loop -> atras .)
    procedure       reduce using rule 34 (loop -> atras .)
    function        reduce using rule 34 (loop -> atras .)
    tk_if           reduce using rule 34 (loop -> atras .)
    tk_while        reduce using rule 34 (loop -> atras .)
    foward          reduce using rule 34 (loop -> atras .)
    backward        reduce using rule 34 (loop -> atras .)
    left            reduce using rule 34 (loop -> atras .)
    right           reduce using rule 34 (loop -> atras .)
    wait            reduce using rule 34 (loop -> atras .)
    stop            reduce using rule 34 (loop -> atras .)
    end             reduce using rule 34 (loop -> atras .)
    RBRACE          reduce using rule 34 (loop -> atras .)


state 22

    (35) loop -> izquierda .

    library         reduce using rule 35 (loop -> izquierda .)
    IDENT           reduce using rule 35 (loop -> izquierda .)
    var             reduce using rule 35 (loop -> izquierda .)
    procedure       reduce using rule 35 (loop -> izquierda .)
    function        reduce using rule 35 (loop -> izquierda .)
    tk_if           reduce using rule 35 (loop -> izquierda .)
    tk_while        reduce using rule 35 (loop -> izquierda .)
    foward          reduce using rule 35 (loop -> izquierda .)
    backward        reduce using rule 35 (loop -> izquierda .)
    left            reduce using rule 35 (loop -> izquierda .)
    right           reduce using rule 35 (loop -> izquierda .)
    wait            reduce using rule 35 (loop -> izquierda .)
    stop            reduce using rule 35 (loop -> izquierda .)
    end             reduce using rule 35 (loop -> izquierda .)
    RBRACE          reduce using rule 35 (loop -> izquierda .)


state 23

    (36) loop -> derecha .

    library         reduce using rule 36 (loop -> derecha .)
    IDENT           reduce using rule 36 (loop -> derecha .)
    var             reduce using rule 36 (loop -> derecha .)
    procedure       reduce using rule 36 (loop -> derecha .)
    function        reduce using rule 36 (loop -> derecha .)
    tk_if           reduce using rule 36 (loop -> derecha .)
    tk_while        reduce using rule 36 (loop -> derecha .)
    foward          reduce using rule 36 (loop -> derecha .)
    backward        reduce using rule 36 (loop -> derecha .)
    left            reduce using rule 36 (loop -> derecha .)
    right           reduce using rule 36 (loop -> derecha .)
    wait            reduce using rule 36 (loop -> derecha .)
    stop            reduce using rule 36 (loop -> derecha .)
    end             reduce using rule 36 (loop -> derecha .)
    RBRACE          reduce using rule 36 (loop -> derecha .)


state 24

    (37) loop -> esperar .

    library         reduce using rule 37 (loop -> esperar .)
    IDENT           reduce using rule 37 (loop -> esperar .)
    var             reduce using rule 37 (loop -> esperar .)
    procedure       reduce using rule 37 (loop -> esperar .)
    function        reduce using rule 37 (loop -> esperar .)
    tk_if           reduce using rule 37 (loop -> esperar .)
    tk_while        reduce using rule 37 (loop -> esperar .)
    foward          reduce using rule 37 (loop -> esperar .)
    backward        reduce using rule 37 (loop -> esperar .)
    left            reduce using rule 37 (loop -> esperar .)
    right           reduce using rule 37 (loop -> esperar .)
    wait            reduce using rule 37 (loop -> esperar .)
    stop            reduce using rule 37 (loop -> esperar .)
    end             reduce using rule 37 (loop -> esperar .)
    RBRACE          reduce using rule 37 (loop -> esperar .)


state 25

    (38) loop -> parar .

    library         reduce using rule 38 (loop -> parar .)
    IDENT           reduce using rule 38 (loop -> parar .)
    var             reduce using rule 38 (loop -> parar .)
    procedure       reduce using rule 38 (loop -> parar .)
    function        reduce using rule 38 (loop -> parar .)
    tk_if           reduce using rule 38 (loop -> parar .)
    tk_while        reduce using rule 38 (loop -> parar .)
    foward          reduce using rule 38 (loop -> parar .)
    backward        reduce using rule 38 (loop -> parar .)
    left            reduce using rule 38 (loop -> parar .)
    right           reduce using rule 38 (loop -> parar .)
    wait            reduce using rule 38 (loop -> parar .)
    stop            reduce using rule 38 (loop -> parar .)
    end             reduce using rule 38 (loop -> parar .)
    RBRACE          reduce using rule 38 (loop -> parar .)


state 26

    (39) loop -> empty .

    library         reduce using rule 39 (loop -> empty .)
    IDENT           reduce using rule 39 (loop -> empty .)
    var             reduce using rule 39 (loop -> empty .)
    procedure       reduce using rule 39 (loop -> empty .)
    function        reduce using rule 39 (loop -> empty .)
    tk_if           reduce using rule 39 (loop -> empty .)
    tk_while        reduce using rule 39 (loop -> empty .)
    foward          reduce using rule 39 (loop -> empty .)
    backward        reduce using rule 39 (loop -> empty .)
    left            reduce using rule 39 (loop -> empty .)
    right           reduce using rule 39 (loop -> empty .)
    wait            reduce using rule 39 (loop -> empty .)
    stop            reduce using rule 39 (loop -> empty .)
    end             reduce using rule 39 (loop -> empty .)
    RBRACE          reduce using rule 39 (loop -> empty .)


state 27

    (20) if -> tk_if . LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> tk_if . LPAREN condicion RPAREN LBRACE codigo RBRACE else

    LPAREN          shift and go to state 46


state 28

    (23) while -> tk_while . LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON

    LPAREN          shift and go to state 47


state 29

    (40) adelante -> foward . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 48


state 30

    (41) atras -> backward . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 49


state 31

    (42) izquierda -> left . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 50


state 32

    (43) derecha -> right . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 51


state 33

    (44) esperar -> wait . LPAREN ENTERO RPAREN SEMICOLON

    LPAREN          shift and go to state 52


state 34

    (45) parar -> stop . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 53


state 35

    (1) beginend -> begin codigo end .

    $end            reduce using rule 1 (beginend -> begin codigo end .)


state 36

    (3) codigo -> sentencia codigo .

    end             reduce using rule 3 (codigo -> sentencia codigo .)
    RBRACE          reduce using rule 3 (codigo -> sentencia codigo .)


state 37

    (32) libreria -> library LPAREN . SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON

    SINGLEDOT       shift and go to state 54


state 38

    (12) variable -> IDENT ASSING . tipo SEMICOLON
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45

    tipo                           shift and go to state 55

state 39

    (11) definicion -> var LPAREN . IDENT VAR_ASSING tipo RPAREN SEMICOLON

    IDENT           shift and go to state 56


state 40

    (25) procedimiento -> procedure IDENT . LPAREN argumento RPAREN SEMICOLON

    LPAREN          shift and go to state 57


state 41

    (24) funcion -> function tipo . LPAREN argumento RPAREN SEMICOLON

    LPAREN          shift and go to state 58


state 42

    (13) tipo -> TEXTO .

    LPAREN          reduce using rule 13 (tipo -> TEXTO .)
    SEMICOLON       reduce using rule 13 (tipo -> TEXTO .)
    SUM             reduce using rule 13 (tipo -> TEXTO .)
    RESTA           reduce using rule 13 (tipo -> TEXTO .)
    IGUAL           reduce using rule 13 (tipo -> TEXTO .)
    MAYOR           reduce using rule 13 (tipo -> TEXTO .)
    MENOR           reduce using rule 13 (tipo -> TEXTO .)
    MAYOR_IGUAL     reduce using rule 13 (tipo -> TEXTO .)
    MENOR_IGUAL     reduce using rule 13 (tipo -> TEXTO .)
    and             reduce using rule 13 (tipo -> TEXTO .)
    or              reduce using rule 13 (tipo -> TEXTO .)
    RPAREN          reduce using rule 13 (tipo -> TEXTO .)


state 43

    (14) tipo -> ENTERO .

    LPAREN          reduce using rule 14 (tipo -> ENTERO .)
    SEMICOLON       reduce using rule 14 (tipo -> ENTERO .)
    RPAREN          reduce using rule 14 (tipo -> ENTERO .)


state 44

    (15) tipo -> DECIMAL .

    LPAREN          reduce using rule 15 (tipo -> DECIMAL .)
    SEMICOLON       reduce using rule 15 (tipo -> DECIMAL .)
    SUM             reduce using rule 15 (tipo -> DECIMAL .)
    RESTA           reduce using rule 15 (tipo -> DECIMAL .)
    IGUAL           reduce using rule 15 (tipo -> DECIMAL .)
    MAYOR           reduce using rule 15 (tipo -> DECIMAL .)
    MENOR           reduce using rule 15 (tipo -> DECIMAL .)
    MAYOR_IGUAL     reduce using rule 15 (tipo -> DECIMAL .)
    MENOR_IGUAL     reduce using rule 15 (tipo -> DECIMAL .)
    and             reduce using rule 15 (tipo -> DECIMAL .)
    or              reduce using rule 15 (tipo -> DECIMAL .)
    RPAREN          reduce using rule 15 (tipo -> DECIMAL .)


state 45

    (16) tipo -> LOGICO .

    LPAREN          reduce using rule 16 (tipo -> LOGICO .)
    SEMICOLON       reduce using rule 16 (tipo -> LOGICO .)
    SUM             reduce using rule 16 (tipo -> LOGICO .)
    RESTA           reduce using rule 16 (tipo -> LOGICO .)
    IGUAL           reduce using rule 16 (tipo -> LOGICO .)
    MAYOR           reduce using rule 16 (tipo -> LOGICO .)
    MENOR           reduce using rule 16 (tipo -> LOGICO .)
    MAYOR_IGUAL     reduce using rule 16 (tipo -> LOGICO .)
    MENOR_IGUAL     reduce using rule 16 (tipo -> LOGICO .)
    and             reduce using rule 16 (tipo -> LOGICO .)
    or              reduce using rule 16 (tipo -> LOGICO .)
    RPAREN          reduce using rule 16 (tipo -> LOGICO .)


state 46

    (20) if -> tk_if LPAREN . condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> tk_if LPAREN . condicion RPAREN LBRACE codigo RBRACE else
    (56) condicion -> . expression relacion expression
    (57) condicion -> . NOT expression
    (58) condicion -> . expression logico expression
    (46) expression -> . expression SUM term
    (47) expression -> . expression RESTA term
    (48) expression -> . term
    (49) expression -> . tipo
    (50) expression -> . variable
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 62
    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 67
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45
    IDENT           shift and go to state 13
    LPAREN          shift and go to state 59

    condicion                      shift and go to state 60
    expression                     shift and go to state 61
    term                           shift and go to state 63
    tipo                           shift and go to state 64
    variable                       shift and go to state 65
    factor                         shift and go to state 66

state 47

    (23) while -> tk_while LPAREN . condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (56) condicion -> . expression relacion expression
    (57) condicion -> . NOT expression
    (58) condicion -> . expression logico expression
    (46) expression -> . expression SUM term
    (47) expression -> . expression RESTA term
    (48) expression -> . term
    (49) expression -> . tipo
    (50) expression -> . variable
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 62
    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 67
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45
    IDENT           shift and go to state 13
    LPAREN          shift and go to state 59

    condicion                      shift and go to state 68
    expression                     shift and go to state 61
    term                           shift and go to state 63
    tipo                           shift and go to state 64
    variable                       shift and go to state 65
    factor                         shift and go to state 66

state 48

    (40) adelante -> foward LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 69


state 49

    (41) atras -> backward LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 70


state 50

    (42) izquierda -> left LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 71


state 51

    (43) derecha -> right LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 72


state 52

    (44) esperar -> wait LPAREN . ENTERO RPAREN SEMICOLON

    ENTERO          shift and go to state 73


state 53

    (45) parar -> stop LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 74


state 54

    (32) libreria -> library LPAREN SINGLEDOT . TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON

    TEXTO           shift and go to state 75


state 55

    (12) variable -> IDENT ASSING tipo . SEMICOLON

    SEMICOLON       shift and go to state 76


state 56

    (11) definicion -> var LPAREN IDENT . VAR_ASSING tipo RPAREN SEMICOLON

    VAR_ASSING      shift and go to state 77


state 57

    (25) procedimiento -> procedure IDENT LPAREN . argumento RPAREN SEMICOLON
    (29) argumento -> . argumento
    (30) argumento -> . LPAREN IDENT VAR_ASSING tipo RPAREN
    (31) argumento -> . empty
    (66) empty -> .

    LPAREN          shift and go to state 78
    RPAREN          reduce using rule 66 (empty -> .)

    argumento                      shift and go to state 79
    empty                          shift and go to state 80

state 58

    (24) funcion -> function tipo LPAREN . argumento RPAREN SEMICOLON
    (29) argumento -> . argumento
    (30) argumento -> . LPAREN IDENT VAR_ASSING tipo RPAREN
    (31) argumento -> . empty
    (66) empty -> .

    LPAREN          shift and go to state 78
    RPAREN          reduce using rule 66 (empty -> .)

    argumento                      shift and go to state 81
    empty                          shift and go to state 80

state 59

    (55) factor -> LPAREN . expression RPAREN
    (46) expression -> . expression SUM term
    (47) expression -> . expression RESTA term
    (48) expression -> . term
    (49) expression -> . tipo
    (50) expression -> . variable
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 67
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45
    IDENT           shift and go to state 13
    LPAREN          shift and go to state 59

    expression                     shift and go to state 82
    term                           shift and go to state 63
    tipo                           shift and go to state 64
    variable                       shift and go to state 65
    factor                         shift and go to state 66

state 60

    (20) if -> tk_if LPAREN condicion . RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> tk_if LPAREN condicion . RPAREN LBRACE codigo RBRACE else

    RPAREN          shift and go to state 83


state 61

    (56) condicion -> expression . relacion expression
    (58) condicion -> expression . logico expression
    (46) expression -> expression . SUM term
    (47) expression -> expression . RESTA term
    (59) relacion -> . IGUAL
    (60) relacion -> . MAYOR
    (61) relacion -> . MENOR
    (62) relacion -> . MAYOR_IGUAL
    (63) relacion -> . MENOR_IGUAL
    (64) logico -> . and
    (65) logico -> . or

    SUM             shift and go to state 86
    RESTA           shift and go to state 87
    IGUAL           shift and go to state 88
    MAYOR           shift and go to state 89
    MENOR           shift and go to state 90
    MAYOR_IGUAL     shift and go to state 91
    MENOR_IGUAL     shift and go to state 92
    and             shift and go to state 93
    or              shift and go to state 94

    relacion                       shift and go to state 84
    logico                         shift and go to state 85

state 62

    (57) condicion -> NOT . expression
    (46) expression -> . expression SUM term
    (47) expression -> . expression RESTA term
    (48) expression -> . term
    (49) expression -> . tipo
    (50) expression -> . variable
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 67
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45
    IDENT           shift and go to state 13
    LPAREN          shift and go to state 59

    expression                     shift and go to state 95
    term                           shift and go to state 63
    tipo                           shift and go to state 64
    variable                       shift and go to state 65
    factor                         shift and go to state 66

state 63

    (48) expression -> term .
    (51) term -> term . PROD factor
    (52) term -> term . DIV factor

    SUM             reduce using rule 48 (expression -> term .)
    RESTA           reduce using rule 48 (expression -> term .)
    IGUAL           reduce using rule 48 (expression -> term .)
    MAYOR           reduce using rule 48 (expression -> term .)
    MENOR           reduce using rule 48 (expression -> term .)
    MAYOR_IGUAL     reduce using rule 48 (expression -> term .)
    MENOR_IGUAL     reduce using rule 48 (expression -> term .)
    and             reduce using rule 48 (expression -> term .)
    or              reduce using rule 48 (expression -> term .)
    RPAREN          reduce using rule 48 (expression -> term .)
    PROD            shift and go to state 96
    DIV             shift and go to state 97


state 64

    (49) expression -> tipo .

    SUM             reduce using rule 49 (expression -> tipo .)
    RESTA           reduce using rule 49 (expression -> tipo .)
    IGUAL           reduce using rule 49 (expression -> tipo .)
    MAYOR           reduce using rule 49 (expression -> tipo .)
    MENOR           reduce using rule 49 (expression -> tipo .)
    MAYOR_IGUAL     reduce using rule 49 (expression -> tipo .)
    MENOR_IGUAL     reduce using rule 49 (expression -> tipo .)
    and             reduce using rule 49 (expression -> tipo .)
    or              reduce using rule 49 (expression -> tipo .)
    RPAREN          reduce using rule 49 (expression -> tipo .)


state 65

    (50) expression -> variable .

    SUM             reduce using rule 50 (expression -> variable .)
    RESTA           reduce using rule 50 (expression -> variable .)
    IGUAL           reduce using rule 50 (expression -> variable .)
    MAYOR           reduce using rule 50 (expression -> variable .)
    MENOR           reduce using rule 50 (expression -> variable .)
    MAYOR_IGUAL     reduce using rule 50 (expression -> variable .)
    MENOR_IGUAL     reduce using rule 50 (expression -> variable .)
    and             reduce using rule 50 (expression -> variable .)
    or              reduce using rule 50 (expression -> variable .)
    RPAREN          reduce using rule 50 (expression -> variable .)


state 66

    (53) term -> factor .

    PROD            reduce using rule 53 (term -> factor .)
    DIV             reduce using rule 53 (term -> factor .)
    SUM             reduce using rule 53 (term -> factor .)
    RESTA           reduce using rule 53 (term -> factor .)
    IGUAL           reduce using rule 53 (term -> factor .)
    MAYOR           reduce using rule 53 (term -> factor .)
    MENOR           reduce using rule 53 (term -> factor .)
    MAYOR_IGUAL     reduce using rule 53 (term -> factor .)
    MENOR_IGUAL     reduce using rule 53 (term -> factor .)
    and             reduce using rule 53 (term -> factor .)
    or              reduce using rule 53 (term -> factor .)
    RPAREN          reduce using rule 53 (term -> factor .)


state 67

    (14) tipo -> ENTERO .
    (54) factor -> ENTERO .

  ! reduce/reduce conflict for SUM resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for RESTA resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MAYOR resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MENOR resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MAYOR_IGUAL resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for MENOR_IGUAL resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for and resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for or resolved using rule 14 (tipo -> ENTERO .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (tipo -> ENTERO .)
    SUM             reduce using rule 14 (tipo -> ENTERO .)
    RESTA           reduce using rule 14 (tipo -> ENTERO .)
    IGUAL           reduce using rule 14 (tipo -> ENTERO .)
    MAYOR           reduce using rule 14 (tipo -> ENTERO .)
    MENOR           reduce using rule 14 (tipo -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 14 (tipo -> ENTERO .)
    MENOR_IGUAL     reduce using rule 14 (tipo -> ENTERO .)
    and             reduce using rule 14 (tipo -> ENTERO .)
    or              reduce using rule 14 (tipo -> ENTERO .)
    RPAREN          reduce using rule 14 (tipo -> ENTERO .)
    PROD            reduce using rule 54 (factor -> ENTERO .)
    DIV             reduce using rule 54 (factor -> ENTERO .)

  ! SUM             [ reduce using rule 54 (factor -> ENTERO .) ]
  ! RESTA           [ reduce using rule 54 (factor -> ENTERO .) ]
  ! IGUAL           [ reduce using rule 54 (factor -> ENTERO .) ]
  ! MAYOR           [ reduce using rule 54 (factor -> ENTERO .) ]
  ! MENOR           [ reduce using rule 54 (factor -> ENTERO .) ]
  ! MAYOR_IGUAL     [ reduce using rule 54 (factor -> ENTERO .) ]
  ! MENOR_IGUAL     [ reduce using rule 54 (factor -> ENTERO .) ]
  ! and             [ reduce using rule 54 (factor -> ENTERO .) ]
  ! or              [ reduce using rule 54 (factor -> ENTERO .) ]
  ! RPAREN          [ reduce using rule 54 (factor -> ENTERO .) ]


state 68

    (23) while -> tk_while LPAREN condicion . RPAREN LBRACE codigo RBRACE SEMICOLON

    RPAREN          shift and go to state 98


state 69

    (40) adelante -> foward LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 99


state 70

    (41) atras -> backward LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 100


state 71

    (42) izquierda -> left LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 101


state 72

    (43) derecha -> right LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 102


state 73

    (44) esperar -> wait LPAREN ENTERO . RPAREN SEMICOLON

    RPAREN          shift and go to state 103


state 74

    (45) parar -> stop LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 104


state 75

    (32) libreria -> library LPAREN SINGLEDOT TEXTO . PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON

    PUNTO           shift and go to state 105


state 76

    (12) variable -> IDENT ASSING tipo SEMICOLON .

    library         reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    IDENT           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    var             reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    procedure       reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    function        reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    tk_if           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    tk_while        reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    foward          reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    backward        reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    left            reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    right           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    wait            reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    stop            reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    end             reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    RBRACE          reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    SUM             reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    RESTA           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    IGUAL           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    MAYOR           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    MENOR           reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    MAYOR_IGUAL     reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    MENOR_IGUAL     reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    and             reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    or              reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)
    RPAREN          reduce using rule 12 (variable -> IDENT ASSING tipo SEMICOLON .)


state 77

    (11) definicion -> var LPAREN IDENT VAR_ASSING . tipo RPAREN SEMICOLON
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45

    tipo                           shift and go to state 106

state 78

    (30) argumento -> LPAREN . IDENT VAR_ASSING tipo RPAREN

    IDENT           shift and go to state 107


state 79

    (25) procedimiento -> procedure IDENT LPAREN argumento . RPAREN SEMICOLON
    (29) argumento -> argumento .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 108

  ! RPAREN          [ reduce using rule 29 (argumento -> argumento .) ]


state 80

    (31) argumento -> empty .

    RPAREN          reduce using rule 31 (argumento -> empty .)


state 81

    (24) funcion -> function tipo LPAREN argumento . RPAREN SEMICOLON
    (29) argumento -> argumento .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 109

  ! RPAREN          [ reduce using rule 29 (argumento -> argumento .) ]


state 82

    (55) factor -> LPAREN expression . RPAREN
    (46) expression -> expression . SUM term
    (47) expression -> expression . RESTA term

    RPAREN          shift and go to state 110
    SUM             shift and go to state 86
    RESTA           shift and go to state 87


state 83

    (20) if -> tk_if LPAREN condicion RPAREN . LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> tk_if LPAREN condicion RPAREN . LBRACE codigo RBRACE else

    LBRACE          shift and go to state 111


state 84

    (56) condicion -> expression relacion . expression
    (46) expression -> . expression SUM term
    (47) expression -> . expression RESTA term
    (48) expression -> . term
    (49) expression -> . tipo
    (50) expression -> . variable
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 67
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45
    IDENT           shift and go to state 13
    LPAREN          shift and go to state 59

    expression                     shift and go to state 112
    term                           shift and go to state 63
    tipo                           shift and go to state 64
    variable                       shift and go to state 65
    factor                         shift and go to state 66

state 85

    (58) condicion -> expression logico . expression
    (46) expression -> . expression SUM term
    (47) expression -> . expression RESTA term
    (48) expression -> . term
    (49) expression -> . tipo
    (50) expression -> . variable
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 67
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45
    IDENT           shift and go to state 13
    LPAREN          shift and go to state 59

    expression                     shift and go to state 113
    term                           shift and go to state 63
    tipo                           shift and go to state 64
    variable                       shift and go to state 65
    factor                         shift and go to state 66

state 86

    (46) expression -> expression SUM . term
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 115
    LPAREN          shift and go to state 59

    term                           shift and go to state 114
    factor                         shift and go to state 66

state 87

    (47) expression -> expression RESTA . term
    (51) term -> . term PROD factor
    (52) term -> . term DIV factor
    (53) term -> . factor
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 115
    LPAREN          shift and go to state 59

    term                           shift and go to state 116
    factor                         shift and go to state 66

state 88

    (59) relacion -> IGUAL .

    TEXTO           reduce using rule 59 (relacion -> IGUAL .)
    ENTERO          reduce using rule 59 (relacion -> IGUAL .)
    DECIMAL         reduce using rule 59 (relacion -> IGUAL .)
    LOGICO          reduce using rule 59 (relacion -> IGUAL .)
    IDENT           reduce using rule 59 (relacion -> IGUAL .)
    LPAREN          reduce using rule 59 (relacion -> IGUAL .)


state 89

    (60) relacion -> MAYOR .

    TEXTO           reduce using rule 60 (relacion -> MAYOR .)
    ENTERO          reduce using rule 60 (relacion -> MAYOR .)
    DECIMAL         reduce using rule 60 (relacion -> MAYOR .)
    LOGICO          reduce using rule 60 (relacion -> MAYOR .)
    IDENT           reduce using rule 60 (relacion -> MAYOR .)
    LPAREN          reduce using rule 60 (relacion -> MAYOR .)


state 90

    (61) relacion -> MENOR .

    TEXTO           reduce using rule 61 (relacion -> MENOR .)
    ENTERO          reduce using rule 61 (relacion -> MENOR .)
    DECIMAL         reduce using rule 61 (relacion -> MENOR .)
    LOGICO          reduce using rule 61 (relacion -> MENOR .)
    IDENT           reduce using rule 61 (relacion -> MENOR .)
    LPAREN          reduce using rule 61 (relacion -> MENOR .)


state 91

    (62) relacion -> MAYOR_IGUAL .

    TEXTO           reduce using rule 62 (relacion -> MAYOR_IGUAL .)
    ENTERO          reduce using rule 62 (relacion -> MAYOR_IGUAL .)
    DECIMAL         reduce using rule 62 (relacion -> MAYOR_IGUAL .)
    LOGICO          reduce using rule 62 (relacion -> MAYOR_IGUAL .)
    IDENT           reduce using rule 62 (relacion -> MAYOR_IGUAL .)
    LPAREN          reduce using rule 62 (relacion -> MAYOR_IGUAL .)


state 92

    (63) relacion -> MENOR_IGUAL .

    TEXTO           reduce using rule 63 (relacion -> MENOR_IGUAL .)
    ENTERO          reduce using rule 63 (relacion -> MENOR_IGUAL .)
    DECIMAL         reduce using rule 63 (relacion -> MENOR_IGUAL .)
    LOGICO          reduce using rule 63 (relacion -> MENOR_IGUAL .)
    IDENT           reduce using rule 63 (relacion -> MENOR_IGUAL .)
    LPAREN          reduce using rule 63 (relacion -> MENOR_IGUAL .)


state 93

    (64) logico -> and .

    TEXTO           reduce using rule 64 (logico -> and .)
    ENTERO          reduce using rule 64 (logico -> and .)
    DECIMAL         reduce using rule 64 (logico -> and .)
    LOGICO          reduce using rule 64 (logico -> and .)
    IDENT           reduce using rule 64 (logico -> and .)
    LPAREN          reduce using rule 64 (logico -> and .)


state 94

    (65) logico -> or .

    TEXTO           reduce using rule 65 (logico -> or .)
    ENTERO          reduce using rule 65 (logico -> or .)
    DECIMAL         reduce using rule 65 (logico -> or .)
    LOGICO          reduce using rule 65 (logico -> or .)
    IDENT           reduce using rule 65 (logico -> or .)
    LPAREN          reduce using rule 65 (logico -> or .)


state 95

    (57) condicion -> NOT expression .
    (46) expression -> expression . SUM term
    (47) expression -> expression . RESTA term

    RPAREN          reduce using rule 57 (condicion -> NOT expression .)
    SUM             shift and go to state 86
    RESTA           shift and go to state 87


state 96

    (51) term -> term PROD . factor
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 115
    LPAREN          shift and go to state 59

    factor                         shift and go to state 117

state 97

    (52) term -> term DIV . factor
    (54) factor -> . ENTERO
    (55) factor -> . LPAREN expression RPAREN

    ENTERO          shift and go to state 115
    LPAREN          shift and go to state 59

    factor                         shift and go to state 118

state 98

    (23) while -> tk_while LPAREN condicion RPAREN . LBRACE codigo RBRACE SEMICOLON

    LBRACE          shift and go to state 119


state 99

    (40) adelante -> foward LPAREN RPAREN SEMICOLON .

    library         reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 40 (adelante -> foward LPAREN RPAREN SEMICOLON .)


state 100

    (41) atras -> backward LPAREN RPAREN SEMICOLON .

    library         reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 41 (atras -> backward LPAREN RPAREN SEMICOLON .)


state 101

    (42) izquierda -> left LPAREN RPAREN SEMICOLON .

    library         reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 42 (izquierda -> left LPAREN RPAREN SEMICOLON .)


state 102

    (43) derecha -> right LPAREN RPAREN SEMICOLON .

    library         reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 43 (derecha -> right LPAREN RPAREN SEMICOLON .)


state 103

    (44) esperar -> wait LPAREN ENTERO RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 120


state 104

    (45) parar -> stop LPAREN RPAREN SEMICOLON .

    library         reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    IDENT           reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    var             reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    procedure       reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    function        reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    tk_if           reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    tk_while        reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    foward          reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    backward        reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    left            reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    right           reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    wait            reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    stop            reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    end             reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 45 (parar -> stop LPAREN RPAREN SEMICOLON .)


state 105

    (32) libreria -> library LPAREN SINGLEDOT TEXTO PUNTO . TEXTO SINGLEDOT RPAREN SEMICOLON

    TEXTO           shift and go to state 121


state 106

    (11) definicion -> var LPAREN IDENT VAR_ASSING tipo . RPAREN SEMICOLON

    RPAREN          shift and go to state 122


state 107

    (30) argumento -> LPAREN IDENT . VAR_ASSING tipo RPAREN

    VAR_ASSING      shift and go to state 123


state 108

    (25) procedimiento -> procedure IDENT LPAREN argumento RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 124


state 109

    (24) funcion -> function tipo LPAREN argumento RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 125


state 110

    (55) factor -> LPAREN expression RPAREN .

    PROD            reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    SUM             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    RESTA           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    IGUAL           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MAYOR           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MENOR           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MAYOR_IGUAL     reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MENOR_IGUAL     reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    and             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    or              reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 55 (factor -> LPAREN expression RPAREN .)


state 111

    (20) if -> tk_if LPAREN condicion RPAREN LBRACE . codigo RBRACE SEMICOLON
    (21) ifelse -> tk_if LPAREN condicion RPAREN LBRACE . codigo RBRACE else
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria
    (5) sentencia -> . variable
    (6) sentencia -> . control
    (7) sentencia -> . definicion
    (8) sentencia -> . procedimiento
    (9) sentencia -> . funcion
    (10) sentencia -> . loop
    (32) libreria -> . library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (17) control -> . if
    (18) control -> . ifelse
    (19) control -> . while
    (11) definicion -> . var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON
    (25) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (24) funcion -> . function tipo LPAREN argumento RPAREN SEMICOLON
    (33) loop -> . adelante
    (34) loop -> . atras
    (35) loop -> . izquierda
    (36) loop -> . derecha
    (37) loop -> . esperar
    (38) loop -> . parar
    (39) loop -> . empty
    (20) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (23) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (40) adelante -> . foward LPAREN RPAREN SEMICOLON
    (41) atras -> . backward LPAREN RPAREN SEMICOLON
    (42) izquierda -> . left LPAREN RPAREN SEMICOLON
    (43) derecha -> . right LPAREN RPAREN SEMICOLON
    (44) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (45) parar -> . stop LPAREN RPAREN SEMICOLON
    (66) empty -> .

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 12
    IDENT           shift and go to state 13
    var             shift and go to state 17
    procedure       shift and go to state 18
    function        shift and go to state 19
    tk_if           shift and go to state 27
    tk_while        shift and go to state 28
    foward          shift and go to state 29
    backward        shift and go to state 30
    left            shift and go to state 31
    right           shift and go to state 32
    wait            shift and go to state 33
    stop            shift and go to state 34
    RBRACE          reduce using rule 66 (empty -> .)

  ! library         [ reduce using rule 66 (empty -> .) ]
  ! IDENT           [ reduce using rule 66 (empty -> .) ]
  ! var             [ reduce using rule 66 (empty -> .) ]
  ! procedure       [ reduce using rule 66 (empty -> .) ]
  ! function        [ reduce using rule 66 (empty -> .) ]
  ! tk_if           [ reduce using rule 66 (empty -> .) ]
  ! tk_while        [ reduce using rule 66 (empty -> .) ]
  ! foward          [ reduce using rule 66 (empty -> .) ]
  ! backward        [ reduce using rule 66 (empty -> .) ]
  ! left            [ reduce using rule 66 (empty -> .) ]
  ! right           [ reduce using rule 66 (empty -> .) ]
  ! wait            [ reduce using rule 66 (empty -> .) ]
  ! stop            [ reduce using rule 66 (empty -> .) ]

    codigo                         shift and go to state 126
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    funcion                        shift and go to state 10
    loop                           shift and go to state 11
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    while                          shift and go to state 16
    adelante                       shift and go to state 20
    atras                          shift and go to state 21
    izquierda                      shift and go to state 22
    derecha                        shift and go to state 23
    esperar                        shift and go to state 24
    parar                          shift and go to state 25
    empty                          shift and go to state 26

state 112

    (56) condicion -> expression relacion expression .
    (46) expression -> expression . SUM term
    (47) expression -> expression . RESTA term

    RPAREN          reduce using rule 56 (condicion -> expression relacion expression .)
    SUM             shift and go to state 86
    RESTA           shift and go to state 87


state 113

    (58) condicion -> expression logico expression .
    (46) expression -> expression . SUM term
    (47) expression -> expression . RESTA term

    RPAREN          reduce using rule 58 (condicion -> expression logico expression .)
    SUM             shift and go to state 86
    RESTA           shift and go to state 87


state 114

    (46) expression -> expression SUM term .
    (51) term -> term . PROD factor
    (52) term -> term . DIV factor

    SUM             reduce using rule 46 (expression -> expression SUM term .)
    RESTA           reduce using rule 46 (expression -> expression SUM term .)
    IGUAL           reduce using rule 46 (expression -> expression SUM term .)
    MAYOR           reduce using rule 46 (expression -> expression SUM term .)
    MENOR           reduce using rule 46 (expression -> expression SUM term .)
    MAYOR_IGUAL     reduce using rule 46 (expression -> expression SUM term .)
    MENOR_IGUAL     reduce using rule 46 (expression -> expression SUM term .)
    and             reduce using rule 46 (expression -> expression SUM term .)
    or              reduce using rule 46 (expression -> expression SUM term .)
    RPAREN          reduce using rule 46 (expression -> expression SUM term .)
    PROD            shift and go to state 96
    DIV             shift and go to state 97


state 115

    (54) factor -> ENTERO .

    PROD            reduce using rule 54 (factor -> ENTERO .)
    DIV             reduce using rule 54 (factor -> ENTERO .)
    SUM             reduce using rule 54 (factor -> ENTERO .)
    RESTA           reduce using rule 54 (factor -> ENTERO .)
    IGUAL           reduce using rule 54 (factor -> ENTERO .)
    MAYOR           reduce using rule 54 (factor -> ENTERO .)
    MENOR           reduce using rule 54 (factor -> ENTERO .)
    MAYOR_IGUAL     reduce using rule 54 (factor -> ENTERO .)
    MENOR_IGUAL     reduce using rule 54 (factor -> ENTERO .)
    and             reduce using rule 54 (factor -> ENTERO .)
    or              reduce using rule 54 (factor -> ENTERO .)
    RPAREN          reduce using rule 54 (factor -> ENTERO .)


state 116

    (47) expression -> expression RESTA term .
    (51) term -> term . PROD factor
    (52) term -> term . DIV factor

    SUM             reduce using rule 47 (expression -> expression RESTA term .)
    RESTA           reduce using rule 47 (expression -> expression RESTA term .)
    IGUAL           reduce using rule 47 (expression -> expression RESTA term .)
    MAYOR           reduce using rule 47 (expression -> expression RESTA term .)
    MENOR           reduce using rule 47 (expression -> expression RESTA term .)
    MAYOR_IGUAL     reduce using rule 47 (expression -> expression RESTA term .)
    MENOR_IGUAL     reduce using rule 47 (expression -> expression RESTA term .)
    and             reduce using rule 47 (expression -> expression RESTA term .)
    or              reduce using rule 47 (expression -> expression RESTA term .)
    RPAREN          reduce using rule 47 (expression -> expression RESTA term .)
    PROD            shift and go to state 96
    DIV             shift and go to state 97


state 117

    (51) term -> term PROD factor .

    PROD            reduce using rule 51 (term -> term PROD factor .)
    DIV             reduce using rule 51 (term -> term PROD factor .)
    SUM             reduce using rule 51 (term -> term PROD factor .)
    RESTA           reduce using rule 51 (term -> term PROD factor .)
    IGUAL           reduce using rule 51 (term -> term PROD factor .)
    MAYOR           reduce using rule 51 (term -> term PROD factor .)
    MENOR           reduce using rule 51 (term -> term PROD factor .)
    MAYOR_IGUAL     reduce using rule 51 (term -> term PROD factor .)
    MENOR_IGUAL     reduce using rule 51 (term -> term PROD factor .)
    and             reduce using rule 51 (term -> term PROD factor .)
    or              reduce using rule 51 (term -> term PROD factor .)
    RPAREN          reduce using rule 51 (term -> term PROD factor .)


state 118

    (52) term -> term DIV factor .

    PROD            reduce using rule 52 (term -> term DIV factor .)
    DIV             reduce using rule 52 (term -> term DIV factor .)
    SUM             reduce using rule 52 (term -> term DIV factor .)
    RESTA           reduce using rule 52 (term -> term DIV factor .)
    IGUAL           reduce using rule 52 (term -> term DIV factor .)
    MAYOR           reduce using rule 52 (term -> term DIV factor .)
    MENOR           reduce using rule 52 (term -> term DIV factor .)
    MAYOR_IGUAL     reduce using rule 52 (term -> term DIV factor .)
    MENOR_IGUAL     reduce using rule 52 (term -> term DIV factor .)
    and             reduce using rule 52 (term -> term DIV factor .)
    or              reduce using rule 52 (term -> term DIV factor .)
    RPAREN          reduce using rule 52 (term -> term DIV factor .)


state 119

    (23) while -> tk_while LPAREN condicion RPAREN LBRACE . codigo RBRACE SEMICOLON
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria
    (5) sentencia -> . variable
    (6) sentencia -> . control
    (7) sentencia -> . definicion
    (8) sentencia -> . procedimiento
    (9) sentencia -> . funcion
    (10) sentencia -> . loop
    (32) libreria -> . library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (17) control -> . if
    (18) control -> . ifelse
    (19) control -> . while
    (11) definicion -> . var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON
    (25) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (24) funcion -> . function tipo LPAREN argumento RPAREN SEMICOLON
    (33) loop -> . adelante
    (34) loop -> . atras
    (35) loop -> . izquierda
    (36) loop -> . derecha
    (37) loop -> . esperar
    (38) loop -> . parar
    (39) loop -> . empty
    (20) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (23) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (40) adelante -> . foward LPAREN RPAREN SEMICOLON
    (41) atras -> . backward LPAREN RPAREN SEMICOLON
    (42) izquierda -> . left LPAREN RPAREN SEMICOLON
    (43) derecha -> . right LPAREN RPAREN SEMICOLON
    (44) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (45) parar -> . stop LPAREN RPAREN SEMICOLON
    (66) empty -> .

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 12
    IDENT           shift and go to state 13
    var             shift and go to state 17
    procedure       shift and go to state 18
    function        shift and go to state 19
    tk_if           shift and go to state 27
    tk_while        shift and go to state 28
    foward          shift and go to state 29
    backward        shift and go to state 30
    left            shift and go to state 31
    right           shift and go to state 32
    wait            shift and go to state 33
    stop            shift and go to state 34
    RBRACE          reduce using rule 66 (empty -> .)

  ! library         [ reduce using rule 66 (empty -> .) ]
  ! IDENT           [ reduce using rule 66 (empty -> .) ]
  ! var             [ reduce using rule 66 (empty -> .) ]
  ! procedure       [ reduce using rule 66 (empty -> .) ]
  ! function        [ reduce using rule 66 (empty -> .) ]
  ! tk_if           [ reduce using rule 66 (empty -> .) ]
  ! tk_while        [ reduce using rule 66 (empty -> .) ]
  ! foward          [ reduce using rule 66 (empty -> .) ]
  ! backward        [ reduce using rule 66 (empty -> .) ]
  ! left            [ reduce using rule 66 (empty -> .) ]
  ! right           [ reduce using rule 66 (empty -> .) ]
  ! wait            [ reduce using rule 66 (empty -> .) ]
  ! stop            [ reduce using rule 66 (empty -> .) ]

    codigo                         shift and go to state 127
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    funcion                        shift and go to state 10
    loop                           shift and go to state 11
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    while                          shift and go to state 16
    adelante                       shift and go to state 20
    atras                          shift and go to state 21
    izquierda                      shift and go to state 22
    derecha                        shift and go to state 23
    esperar                        shift and go to state 24
    parar                          shift and go to state 25
    empty                          shift and go to state 26

state 120

    (44) esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .

    library         reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    IDENT           reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    var             reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    procedure       reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    function        reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    tk_if           reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    tk_while        reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    foward          reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    backward        reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    left            reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    right           reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    wait            reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    stop            reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    end             reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)
    RBRACE          reduce using rule 44 (esperar -> wait LPAREN ENTERO RPAREN SEMICOLON .)


state 121

    (32) libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO . SINGLEDOT RPAREN SEMICOLON

    SINGLEDOT       shift and go to state 128


state 122

    (11) definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 129


state 123

    (30) argumento -> LPAREN IDENT VAR_ASSING . tipo RPAREN
    (13) tipo -> . TEXTO
    (14) tipo -> . ENTERO
    (15) tipo -> . DECIMAL
    (16) tipo -> . LOGICO

    TEXTO           shift and go to state 42
    ENTERO          shift and go to state 43
    DECIMAL         shift and go to state 44
    LOGICO          shift and go to state 45

    tipo                           shift and go to state 130

state 124

    (25) procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .

    library         reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    IDENT           reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    var             reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    procedure       reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    function        reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    tk_if           reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    tk_while        reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    foward          reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    backward        reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    left            reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    right           reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    wait            reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    stop            reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    end             reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)
    RBRACE          reduce using rule 25 (procedimiento -> procedure IDENT LPAREN argumento RPAREN SEMICOLON .)


state 125

    (24) funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .

    library         reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    IDENT           reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    var             reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    procedure       reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    function        reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    tk_if           reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    tk_while        reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    foward          reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    backward        reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    left            reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    right           reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    wait            reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    stop            reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    end             reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)
    RBRACE          reduce using rule 24 (funcion -> function tipo LPAREN argumento RPAREN SEMICOLON .)


state 126

    (20) if -> tk_if LPAREN condicion RPAREN LBRACE codigo . RBRACE SEMICOLON
    (21) ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo . RBRACE else

    RBRACE          shift and go to state 131


state 127

    (23) while -> tk_while LPAREN condicion RPAREN LBRACE codigo . RBRACE SEMICOLON

    RBRACE          shift and go to state 132


state 128

    (32) libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT . RPAREN SEMICOLON

    RPAREN          shift and go to state 133


state 129

    (11) definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .

    library         reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    IDENT           reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    var             reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    procedure       reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    function        reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    tk_if           reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    tk_while        reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    foward          reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    backward        reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    left            reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    right           reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    wait            reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    stop            reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    end             reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)
    RBRACE          reduce using rule 11 (definicion -> var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON .)


state 130

    (30) argumento -> LPAREN IDENT VAR_ASSING tipo . RPAREN

    RPAREN          shift and go to state 134


state 131

    (20) if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE . SEMICOLON
    (21) ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE . else
    (22) else -> . tk_else LBRACE codigo RBRACE SEMICOLON

    SEMICOLON       shift and go to state 135
    tk_else         shift and go to state 137

    else                           shift and go to state 136

state 132

    (23) while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 138


state 133

    (32) libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 139


state 134

    (30) argumento -> LPAREN IDENT VAR_ASSING tipo RPAREN .

    RPAREN          reduce using rule 30 (argumento -> LPAREN IDENT VAR_ASSING tipo RPAREN .)


state 135

    (20) if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .

    library         reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    IDENT           reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    var             reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    procedure       reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    function        reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_if           reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_while        reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    foward          reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    backward        reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    left            reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    right           reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    wait            reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    stop            reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    end             reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    RBRACE          reduce using rule 20 (if -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)


state 136

    (21) ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .

    library         reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    IDENT           reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    var             reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    procedure       reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    function        reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    tk_if           reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    tk_while        reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    foward          reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    backward        reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    left            reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    right           reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    wait            reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    stop            reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    end             reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)
    RBRACE          reduce using rule 21 (ifelse -> tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else .)


state 137

    (22) else -> tk_else . LBRACE codigo RBRACE SEMICOLON

    LBRACE          shift and go to state 140


state 138

    (23) while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .

    library         reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    IDENT           reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    var             reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    procedure       reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    function        reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_if           reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    tk_while        reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    foward          reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    backward        reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    left            reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    right           reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    wait            reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    stop            reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    end             reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)
    RBRACE          reduce using rule 23 (while -> tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON .)


state 139

    (32) libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .

    library         reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    IDENT           reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    var             reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    procedure       reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    function        reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    tk_if           reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    tk_while        reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    foward          reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    backward        reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    left            reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    right           reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    wait            reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    stop            reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    end             reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)
    RBRACE          reduce using rule 32 (libreria -> library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON .)


state 140

    (22) else -> tk_else LBRACE . codigo RBRACE SEMICOLON
    (2) codigo -> . sentencia
    (3) codigo -> . sentencia codigo
    (4) sentencia -> . libreria
    (5) sentencia -> . variable
    (6) sentencia -> . control
    (7) sentencia -> . definicion
    (8) sentencia -> . procedimiento
    (9) sentencia -> . funcion
    (10) sentencia -> . loop
    (32) libreria -> . library LPAREN SINGLEDOT TEXTO PUNTO TEXTO SINGLEDOT RPAREN SEMICOLON
    (12) variable -> . IDENT ASSING tipo SEMICOLON
    (17) control -> . if
    (18) control -> . ifelse
    (19) control -> . while
    (11) definicion -> . var LPAREN IDENT VAR_ASSING tipo RPAREN SEMICOLON
    (25) procedimiento -> . procedure IDENT LPAREN argumento RPAREN SEMICOLON
    (24) funcion -> . function tipo LPAREN argumento RPAREN SEMICOLON
    (33) loop -> . adelante
    (34) loop -> . atras
    (35) loop -> . izquierda
    (36) loop -> . derecha
    (37) loop -> . esperar
    (38) loop -> . parar
    (39) loop -> . empty
    (20) if -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (21) ifelse -> . tk_if LPAREN condicion RPAREN LBRACE codigo RBRACE else
    (23) while -> . tk_while LPAREN condicion RPAREN LBRACE codigo RBRACE SEMICOLON
    (40) adelante -> . foward LPAREN RPAREN SEMICOLON
    (41) atras -> . backward LPAREN RPAREN SEMICOLON
    (42) izquierda -> . left LPAREN RPAREN SEMICOLON
    (43) derecha -> . right LPAREN RPAREN SEMICOLON
    (44) esperar -> . wait LPAREN ENTERO RPAREN SEMICOLON
    (45) parar -> . stop LPAREN RPAREN SEMICOLON
    (66) empty -> .

  ! shift/reduce conflict for library resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for procedure resolved as shift
  ! shift/reduce conflict for function resolved as shift
  ! shift/reduce conflict for tk_if resolved as shift
  ! shift/reduce conflict for tk_while resolved as shift
  ! shift/reduce conflict for foward resolved as shift
  ! shift/reduce conflict for backward resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for wait resolved as shift
  ! shift/reduce conflict for stop resolved as shift
    library         shift and go to state 12
    IDENT           shift and go to state 13
    var             shift and go to state 17
    procedure       shift and go to state 18
    function        shift and go to state 19
    tk_if           shift and go to state 27
    tk_while        shift and go to state 28
    foward          shift and go to state 29
    backward        shift and go to state 30
    left            shift and go to state 31
    right           shift and go to state 32
    wait            shift and go to state 33
    stop            shift and go to state 34
    RBRACE          reduce using rule 66 (empty -> .)

  ! library         [ reduce using rule 66 (empty -> .) ]
  ! IDENT           [ reduce using rule 66 (empty -> .) ]
  ! var             [ reduce using rule 66 (empty -> .) ]
  ! procedure       [ reduce using rule 66 (empty -> .) ]
  ! function        [ reduce using rule 66 (empty -> .) ]
  ! tk_if           [ reduce using rule 66 (empty -> .) ]
  ! tk_while        [ reduce using rule 66 (empty -> .) ]
  ! foward          [ reduce using rule 66 (empty -> .) ]
  ! backward        [ reduce using rule 66 (empty -> .) ]
  ! left            [ reduce using rule 66 (empty -> .) ]
  ! right           [ reduce using rule 66 (empty -> .) ]
  ! wait            [ reduce using rule 66 (empty -> .) ]
  ! stop            [ reduce using rule 66 (empty -> .) ]

    codigo                         shift and go to state 141
    sentencia                      shift and go to state 4
    libreria                       shift and go to state 5
    variable                       shift and go to state 6
    control                        shift and go to state 7
    definicion                     shift and go to state 8
    procedimiento                  shift and go to state 9
    funcion                        shift and go to state 10
    loop                           shift and go to state 11
    if                             shift and go to state 14
    ifelse                         shift and go to state 15
    while                          shift and go to state 16
    adelante                       shift and go to state 20
    atras                          shift and go to state 21
    izquierda                      shift and go to state 22
    derecha                        shift and go to state 23
    esperar                        shift and go to state 24
    parar                          shift and go to state 25
    empty                          shift and go to state 26

state 141

    (22) else -> tk_else LBRACE codigo . RBRACE SEMICOLON

    RBRACE          shift and go to state 142


state 142

    (22) else -> tk_else LBRACE codigo RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 143


state 143

    (22) else -> tk_else LBRACE codigo RBRACE SEMICOLON .

    library         reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    IDENT           reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    var             reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    procedure       reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    function        reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    tk_if           reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    tk_while        reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    foward          reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    backward        reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    left            reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    right           reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    wait            reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    stop            reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    end             reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)
    RBRACE          reduce using rule 22 (else -> tk_else LBRACE codigo RBRACE SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for library in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 2 resolved as shift
WARNING: shift/reduce conflict for var in state 2 resolved as shift
WARNING: shift/reduce conflict for procedure in state 2 resolved as shift
WARNING: shift/reduce conflict for function in state 2 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 2 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 2 resolved as shift
WARNING: shift/reduce conflict for foward in state 2 resolved as shift
WARNING: shift/reduce conflict for backward in state 2 resolved as shift
WARNING: shift/reduce conflict for left in state 2 resolved as shift
WARNING: shift/reduce conflict for right in state 2 resolved as shift
WARNING: shift/reduce conflict for wait in state 2 resolved as shift
WARNING: shift/reduce conflict for stop in state 2 resolved as shift
WARNING: shift/reduce conflict for library in state 4 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 4 resolved as shift
WARNING: shift/reduce conflict for var in state 4 resolved as shift
WARNING: shift/reduce conflict for procedure in state 4 resolved as shift
WARNING: shift/reduce conflict for function in state 4 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 4 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 4 resolved as shift
WARNING: shift/reduce conflict for foward in state 4 resolved as shift
WARNING: shift/reduce conflict for backward in state 4 resolved as shift
WARNING: shift/reduce conflict for left in state 4 resolved as shift
WARNING: shift/reduce conflict for right in state 4 resolved as shift
WARNING: shift/reduce conflict for wait in state 4 resolved as shift
WARNING: shift/reduce conflict for stop in state 4 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 79 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 81 resolved as shift
WARNING: shift/reduce conflict for library in state 111 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 111 resolved as shift
WARNING: shift/reduce conflict for var in state 111 resolved as shift
WARNING: shift/reduce conflict for procedure in state 111 resolved as shift
WARNING: shift/reduce conflict for function in state 111 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 111 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 111 resolved as shift
WARNING: shift/reduce conflict for foward in state 111 resolved as shift
WARNING: shift/reduce conflict for backward in state 111 resolved as shift
WARNING: shift/reduce conflict for left in state 111 resolved as shift
WARNING: shift/reduce conflict for right in state 111 resolved as shift
WARNING: shift/reduce conflict for wait in state 111 resolved as shift
WARNING: shift/reduce conflict for stop in state 111 resolved as shift
WARNING: shift/reduce conflict for library in state 119 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 119 resolved as shift
WARNING: shift/reduce conflict for var in state 119 resolved as shift
WARNING: shift/reduce conflict for procedure in state 119 resolved as shift
WARNING: shift/reduce conflict for function in state 119 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 119 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 119 resolved as shift
WARNING: shift/reduce conflict for foward in state 119 resolved as shift
WARNING: shift/reduce conflict for backward in state 119 resolved as shift
WARNING: shift/reduce conflict for left in state 119 resolved as shift
WARNING: shift/reduce conflict for right in state 119 resolved as shift
WARNING: shift/reduce conflict for wait in state 119 resolved as shift
WARNING: shift/reduce conflict for stop in state 119 resolved as shift
WARNING: shift/reduce conflict for library in state 140 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 140 resolved as shift
WARNING: shift/reduce conflict for var in state 140 resolved as shift
WARNING: shift/reduce conflict for procedure in state 140 resolved as shift
WARNING: shift/reduce conflict for function in state 140 resolved as shift
WARNING: shift/reduce conflict for tk_if in state 140 resolved as shift
WARNING: shift/reduce conflict for tk_while in state 140 resolved as shift
WARNING: shift/reduce conflict for foward in state 140 resolved as shift
WARNING: shift/reduce conflict for backward in state 140 resolved as shift
WARNING: shift/reduce conflict for left in state 140 resolved as shift
WARNING: shift/reduce conflict for right in state 140 resolved as shift
WARNING: shift/reduce conflict for wait in state 140 resolved as shift
WARNING: shift/reduce conflict for stop in state 140 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (codigo -> sentencia)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 67 resolved using rule (tipo -> ENTERO)
WARNING: rejected rule (factor -> ENTERO) in state 67
